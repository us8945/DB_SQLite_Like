Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement_list
Rule 1     statement_list -> statement
Rule 2     statement_list -> statement_list statement
Rule 3     statement -> insert_statement
Rule 4     statement -> select_statement
Rule 5     statement -> show_statement
Rule 6     statement -> create_table_statement
Rule 7     statement -> delete_statement
Rule 8     statement -> update_statement
Rule 9     statement -> drop_table_statement
Rule 10    show_statement -> SHOW TABLES
Rule 11    show_statement -> SHOW TABLES SEMI
Rule 12    show_statement -> SHOW TABLE ID
Rule 13    show_statement -> SHOW TABLE ID SEMI
Rule 14    drop_table_statement -> DROP TABLE ID
Rule 15    drop_table_statement -> DROP TABLE ID SEMI
Rule 16    create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN
Rule 17    create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI
Rule 18    create_table_column_list -> create_table_column_spec COMMA create_table_column_list
Rule 19    create_table_column_list -> create_table_column_spec
Rule 20    create_table_column_spec -> ID data_type qualification_list
Rule 21    create_table_column_spec -> ID data_type
Rule 22    data_type -> INT
Rule 23    data_type -> DOUBLE
Rule 24    data_type -> TEXT
Rule 25    data_type -> TINYINT
Rule 26    data_type -> SMALLINT
Rule 27    data_type -> BIGINT
Rule 28    data_type -> REAL
Rule 29    data_type -> DATETIME
Rule 30    data_type -> DATE
Rule 31    qualification_list -> qualification_spec qualification_list
Rule 32    qualification_list -> qualification_spec
Rule 33    qualification_spec -> NOT NULL
Rule 34    qualification_spec -> PRIMARY KEY
Rule 35    delete_statement -> DELETE FROM ID opt_where_clause
Rule 36    delete_statement -> DELETE FROM ID opt_where_clause SEMI
Rule 37    insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
Rule 38    insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
Rule 39    insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
Rule 40    insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
Rule 41    insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN
Rule 42    insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN SEMI
Rule 43    insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN
Rule 44    insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI
Rule 45    update_statement -> UPDATE ID SET asignment_list opt_where_clause
Rule 46    update_statement -> UPDATE ID SET asignment_list opt_where_clause SEMI
Rule 47    asignment_list -> asignment_spec COMMA asignment_list
Rule 48    asignment_list -> asignment_spec
Rule 49    asignment_spec -> ID EQ conditional_expr
Rule 50    select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause
Rule 51    select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI
Rule 52    select_columns -> TIMES
Rule 53    select_columns -> id_list
Rule 54    opt_where_clause -> WHERE conditional_expr
Rule 55    opt_where_clause -> <empty>
Rule 56    conditional_expr -> conditional_expr OR conditional_expr
Rule 57    conditional_expr -> conditional_expr AND conditional_expr
Rule 58    conditional_expr -> NOT conditional_expr
Rule 59    conditional_expr -> LPAREN conditional_expr RPAREN
Rule 60    conditional_expr -> predicate
Rule 61    predicate -> comparison_predicate
Rule 62    comparison_predicate -> scalar_exp EQ scalar_exp
Rule 63    comparison_predicate -> scalar_exp NE scalar_exp
Rule 64    comparison_predicate -> scalar_exp LT scalar_exp
Rule 65    comparison_predicate -> scalar_exp LE scalar_exp
Rule 66    comparison_predicate -> scalar_exp GT scalar_exp
Rule 67    comparison_predicate -> scalar_exp GE scalar_exp
Rule 68    comparison_predicate -> scalar_exp
Rule 69    scalar_exp -> scalar_exp PLUS scalar_exp
Rule 70    scalar_exp -> scalar_exp MINUS scalar_exp
Rule 71    scalar_exp -> scalar_exp TIMES scalar_exp
Rule 72    scalar_exp -> scalar_exp DIVIDE scalar_exp
Rule 73    scalar_exp -> atom
Rule 74    scalar_exp -> LPAREN scalar_exp RPAREN
Rule 75    atom -> ID
Rule 76    atom -> FLOAT
Rule 77    atom -> NUMBER
Rule 78    atom -> STRING
Rule 79    atom -> NULL
Rule 80    opt_orderby_clause -> ORDER BY ID
Rule 81    opt_orderby_clause -> <empty>
Rule 82    id_list -> ID
Rule 83    id_list -> id_list COMMA ID
Rule 84    expr_list -> conditional_expr
Rule 85    expr_list -> expr_list COMMA conditional_expr
Rule 86    expr -> expr PLUS term
Rule 87    expr -> expr MINUS term
Rule 88    expr -> term
Rule 89    expr -> ID
Rule 90    expr -> STRING
Rule 91    expr -> NULL
Rule 92    expr -> <empty>
Rule 93    term -> term TIMES factor
Rule 94    term -> term DIVIDE factor
Rule 95    term -> factor
Rule 96    factor -> NUMBER
Rule 97    factor -> LPAREN expr RPAREN

Terminals, with rules where they appear

AND                  : 57
BIGINT               : 27
BY                   : 80
COMMA                : 18 47 83 85
CREATE               : 16 17
DATE                 : 30
DATETIME             : 29
DELETE               : 35 36
DIVIDE               : 72 94
DOUBLE               : 23
DROP                 : 14 15
EQ                   : 49 62
FLOAT                : 76
FROM                 : 35 36 50 51
GE                   : 67
GT                   : 66
ID                   : 12 13 14 15 16 17 20 21 35 36 37 38 39 40 41 42 43 44 45 46 49 50 51 75 80 82 83 89
INSERT               : 37 38 39 40 41 42 43 44
INT                  : 22
INTO                 : 39 40 43 44
KEY                  : 34
LE                   : 65
LPAREN               : 16 17 37 37 38 38 39 39 40 40 41 42 43 44 59 74 97
LT                   : 64
MINUS                : 70 87
NE                   : 63
NOT                  : 33 58
NULL                 : 33 79 91
NUMBER               : 77 96
OR                   : 56
ORDER                : 80
PLUS                 : 69 86
PRIMARY              : 34
REAL                 : 28
RPAREN               : 16 17 37 37 38 38 39 39 40 40 41 42 43 44 59 74 97
SELECT               : 50 51
SEMI                 : 11 13 15 17 36 38 40 42 44 46 51
SET                  : 45 46
SHOW                 : 10 11 12 13
SMALLINT             : 26
STRING               : 78 90
TABLE                : 12 13 14 15 16 17
TABLES               : 10 11
TEXT                 : 24
TIMES                : 52 71 93
TINYINT              : 25
UPDATE               : 45 46
VALUES               : 37 38 39 40 41 42 43 44
WHERE                : 54
error                : 

Nonterminals, with rules where they appear

asignment_list       : 45 46 47
asignment_spec       : 47 48
atom                 : 73
comparison_predicate : 61
conditional_expr     : 49 54 56 56 57 57 58 59 84 85
create_table_column_list : 16 17 18
create_table_column_spec : 18 19
create_table_statement : 6
data_type            : 20 21
delete_statement     : 7
drop_table_statement : 9
expr                 : 86 87 97
expr_list            : 37 38 39 40 41 42 43 44 85
factor               : 93 94 95
id_list              : 37 38 39 40 53 83
insert_statement     : 3
opt_orderby_clause   : 50 51
opt_where_clause     : 35 36 45 46 50 51
predicate            : 60
qualification_list   : 20 31
qualification_spec   : 31 32
scalar_exp           : 62 62 63 63 64 64 65 65 66 66 67 67 68 69 69 70 70 71 71 72 72 74
select_columns       : 50 51
select_statement     : 4
show_statement       : 5
statement            : 1 2
statement_list       : 2 0
term                 : 86 87 88 93 94
update_statement     : 8

Parsing method: LALR

state 0

    (0) S' -> . statement_list
    (1) statement_list -> . statement
    (2) statement_list -> . statement_list statement
    (3) statement -> . insert_statement
    (4) statement -> . select_statement
    (5) statement -> . show_statement
    (6) statement -> . create_table_statement
    (7) statement -> . delete_statement
    (8) statement -> . update_statement
    (9) statement -> . drop_table_statement
    (37) insert_statement -> . INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (38) insert_statement -> . INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (39) insert_statement -> . INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (40) insert_statement -> . INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (41) insert_statement -> . INSERT ID VALUES LPAREN expr_list RPAREN
    (42) insert_statement -> . INSERT ID VALUES LPAREN expr_list RPAREN SEMI
    (43) insert_statement -> . INSERT INTO ID VALUES LPAREN expr_list RPAREN
    (44) insert_statement -> . INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI
    (50) select_statement -> . SELECT select_columns FROM ID opt_where_clause opt_orderby_clause
    (51) select_statement -> . SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI
    (10) show_statement -> . SHOW TABLES
    (11) show_statement -> . SHOW TABLES SEMI
    (12) show_statement -> . SHOW TABLE ID
    (13) show_statement -> . SHOW TABLE ID SEMI
    (16) create_table_statement -> . CREATE TABLE ID LPAREN create_table_column_list RPAREN
    (17) create_table_statement -> . CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI
    (35) delete_statement -> . DELETE FROM ID opt_where_clause
    (36) delete_statement -> . DELETE FROM ID opt_where_clause SEMI
    (45) update_statement -> . UPDATE ID SET asignment_list opt_where_clause
    (46) update_statement -> . UPDATE ID SET asignment_list opt_where_clause SEMI
    (14) drop_table_statement -> . DROP TABLE ID
    (15) drop_table_statement -> . DROP TABLE ID SEMI

    INSERT          shift and go to state 1
    SELECT          shift and go to state 8
    SHOW            shift and go to state 16
    CREATE          shift and go to state 13
    DELETE          shift and go to state 10
    UPDATE          shift and go to state 9
    DROP            shift and go to state 2

    create_table_statement         shift and go to state 11
    insert_statement               shift and go to state 3
    delete_statement               shift and go to state 4
    drop_table_statement           shift and go to state 12
    update_statement               shift and go to state 6
    statement_list                 shift and go to state 14
    select_statement               shift and go to state 7
    statement                      shift and go to state 15
    show_statement                 shift and go to state 5

state 1

    (37) insert_statement -> INSERT . ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (38) insert_statement -> INSERT . ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (39) insert_statement -> INSERT . INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (40) insert_statement -> INSERT . INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (41) insert_statement -> INSERT . ID VALUES LPAREN expr_list RPAREN
    (42) insert_statement -> INSERT . ID VALUES LPAREN expr_list RPAREN SEMI
    (43) insert_statement -> INSERT . INTO ID VALUES LPAREN expr_list RPAREN
    (44) insert_statement -> INSERT . INTO ID VALUES LPAREN expr_list RPAREN SEMI

    ID              shift and go to state 17
    INTO            shift and go to state 18


state 2

    (14) drop_table_statement -> DROP . TABLE ID
    (15) drop_table_statement -> DROP . TABLE ID SEMI

    TABLE           shift and go to state 19


state 3

    (3) statement -> insert_statement .

    INSERT          reduce using rule 3 (statement -> insert_statement .)
    SELECT          reduce using rule 3 (statement -> insert_statement .)
    SHOW            reduce using rule 3 (statement -> insert_statement .)
    CREATE          reduce using rule 3 (statement -> insert_statement .)
    DELETE          reduce using rule 3 (statement -> insert_statement .)
    UPDATE          reduce using rule 3 (statement -> insert_statement .)
    DROP            reduce using rule 3 (statement -> insert_statement .)
    $end            reduce using rule 3 (statement -> insert_statement .)


state 4

    (7) statement -> delete_statement .

    INSERT          reduce using rule 7 (statement -> delete_statement .)
    SELECT          reduce using rule 7 (statement -> delete_statement .)
    SHOW            reduce using rule 7 (statement -> delete_statement .)
    CREATE          reduce using rule 7 (statement -> delete_statement .)
    DELETE          reduce using rule 7 (statement -> delete_statement .)
    UPDATE          reduce using rule 7 (statement -> delete_statement .)
    DROP            reduce using rule 7 (statement -> delete_statement .)
    $end            reduce using rule 7 (statement -> delete_statement .)


state 5

    (5) statement -> show_statement .

    INSERT          reduce using rule 5 (statement -> show_statement .)
    SELECT          reduce using rule 5 (statement -> show_statement .)
    SHOW            reduce using rule 5 (statement -> show_statement .)
    CREATE          reduce using rule 5 (statement -> show_statement .)
    DELETE          reduce using rule 5 (statement -> show_statement .)
    UPDATE          reduce using rule 5 (statement -> show_statement .)
    DROP            reduce using rule 5 (statement -> show_statement .)
    $end            reduce using rule 5 (statement -> show_statement .)


state 6

    (8) statement -> update_statement .

    INSERT          reduce using rule 8 (statement -> update_statement .)
    SELECT          reduce using rule 8 (statement -> update_statement .)
    SHOW            reduce using rule 8 (statement -> update_statement .)
    CREATE          reduce using rule 8 (statement -> update_statement .)
    DELETE          reduce using rule 8 (statement -> update_statement .)
    UPDATE          reduce using rule 8 (statement -> update_statement .)
    DROP            reduce using rule 8 (statement -> update_statement .)
    $end            reduce using rule 8 (statement -> update_statement .)


state 7

    (4) statement -> select_statement .

    INSERT          reduce using rule 4 (statement -> select_statement .)
    SELECT          reduce using rule 4 (statement -> select_statement .)
    SHOW            reduce using rule 4 (statement -> select_statement .)
    CREATE          reduce using rule 4 (statement -> select_statement .)
    DELETE          reduce using rule 4 (statement -> select_statement .)
    UPDATE          reduce using rule 4 (statement -> select_statement .)
    DROP            reduce using rule 4 (statement -> select_statement .)
    $end            reduce using rule 4 (statement -> select_statement .)


state 8

    (50) select_statement -> SELECT . select_columns FROM ID opt_where_clause opt_orderby_clause
    (51) select_statement -> SELECT . select_columns FROM ID opt_where_clause opt_orderby_clause SEMI
    (52) select_columns -> . TIMES
    (53) select_columns -> . id_list
    (82) id_list -> . ID
    (83) id_list -> . id_list COMMA ID

    TIMES           shift and go to state 23
    ID              shift and go to state 20

    select_columns                 shift and go to state 21
    id_list                        shift and go to state 22

state 9

    (45) update_statement -> UPDATE . ID SET asignment_list opt_where_clause
    (46) update_statement -> UPDATE . ID SET asignment_list opt_where_clause SEMI

    ID              shift and go to state 24


state 10

    (35) delete_statement -> DELETE . FROM ID opt_where_clause
    (36) delete_statement -> DELETE . FROM ID opt_where_clause SEMI

    FROM            shift and go to state 25


state 11

    (6) statement -> create_table_statement .

    INSERT          reduce using rule 6 (statement -> create_table_statement .)
    SELECT          reduce using rule 6 (statement -> create_table_statement .)
    SHOW            reduce using rule 6 (statement -> create_table_statement .)
    CREATE          reduce using rule 6 (statement -> create_table_statement .)
    DELETE          reduce using rule 6 (statement -> create_table_statement .)
    UPDATE          reduce using rule 6 (statement -> create_table_statement .)
    DROP            reduce using rule 6 (statement -> create_table_statement .)
    $end            reduce using rule 6 (statement -> create_table_statement .)


state 12

    (9) statement -> drop_table_statement .

    INSERT          reduce using rule 9 (statement -> drop_table_statement .)
    SELECT          reduce using rule 9 (statement -> drop_table_statement .)
    SHOW            reduce using rule 9 (statement -> drop_table_statement .)
    CREATE          reduce using rule 9 (statement -> drop_table_statement .)
    DELETE          reduce using rule 9 (statement -> drop_table_statement .)
    UPDATE          reduce using rule 9 (statement -> drop_table_statement .)
    DROP            reduce using rule 9 (statement -> drop_table_statement .)
    $end            reduce using rule 9 (statement -> drop_table_statement .)


state 13

    (16) create_table_statement -> CREATE . TABLE ID LPAREN create_table_column_list RPAREN
    (17) create_table_statement -> CREATE . TABLE ID LPAREN create_table_column_list RPAREN SEMI

    TABLE           shift and go to state 26


state 14

    (0) S' -> statement_list .
    (2) statement_list -> statement_list . statement
    (3) statement -> . insert_statement
    (4) statement -> . select_statement
    (5) statement -> . show_statement
    (6) statement -> . create_table_statement
    (7) statement -> . delete_statement
    (8) statement -> . update_statement
    (9) statement -> . drop_table_statement
    (37) insert_statement -> . INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (38) insert_statement -> . INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (39) insert_statement -> . INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (40) insert_statement -> . INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (41) insert_statement -> . INSERT ID VALUES LPAREN expr_list RPAREN
    (42) insert_statement -> . INSERT ID VALUES LPAREN expr_list RPAREN SEMI
    (43) insert_statement -> . INSERT INTO ID VALUES LPAREN expr_list RPAREN
    (44) insert_statement -> . INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI
    (50) select_statement -> . SELECT select_columns FROM ID opt_where_clause opt_orderby_clause
    (51) select_statement -> . SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI
    (10) show_statement -> . SHOW TABLES
    (11) show_statement -> . SHOW TABLES SEMI
    (12) show_statement -> . SHOW TABLE ID
    (13) show_statement -> . SHOW TABLE ID SEMI
    (16) create_table_statement -> . CREATE TABLE ID LPAREN create_table_column_list RPAREN
    (17) create_table_statement -> . CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI
    (35) delete_statement -> . DELETE FROM ID opt_where_clause
    (36) delete_statement -> . DELETE FROM ID opt_where_clause SEMI
    (45) update_statement -> . UPDATE ID SET asignment_list opt_where_clause
    (46) update_statement -> . UPDATE ID SET asignment_list opt_where_clause SEMI
    (14) drop_table_statement -> . DROP TABLE ID
    (15) drop_table_statement -> . DROP TABLE ID SEMI

    INSERT          shift and go to state 1
    SELECT          shift and go to state 8
    SHOW            shift and go to state 16
    CREATE          shift and go to state 13
    DELETE          shift and go to state 10
    UPDATE          shift and go to state 9
    DROP            shift and go to state 2

    create_table_statement         shift and go to state 11
    insert_statement               shift and go to state 3
    delete_statement               shift and go to state 4
    drop_table_statement           shift and go to state 12
    update_statement               shift and go to state 6
    select_statement               shift and go to state 7
    statement                      shift and go to state 27
    show_statement                 shift and go to state 5

state 15

    (1) statement_list -> statement .

    INSERT          reduce using rule 1 (statement_list -> statement .)
    SELECT          reduce using rule 1 (statement_list -> statement .)
    SHOW            reduce using rule 1 (statement_list -> statement .)
    CREATE          reduce using rule 1 (statement_list -> statement .)
    DELETE          reduce using rule 1 (statement_list -> statement .)
    UPDATE          reduce using rule 1 (statement_list -> statement .)
    DROP            reduce using rule 1 (statement_list -> statement .)
    $end            reduce using rule 1 (statement_list -> statement .)


state 16

    (10) show_statement -> SHOW . TABLES
    (11) show_statement -> SHOW . TABLES SEMI
    (12) show_statement -> SHOW . TABLE ID
    (13) show_statement -> SHOW . TABLE ID SEMI

    TABLES          shift and go to state 29
    TABLE           shift and go to state 28


state 17

    (37) insert_statement -> INSERT ID . LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (38) insert_statement -> INSERT ID . LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (41) insert_statement -> INSERT ID . VALUES LPAREN expr_list RPAREN
    (42) insert_statement -> INSERT ID . VALUES LPAREN expr_list RPAREN SEMI

    LPAREN          shift and go to state 30
    VALUES          shift and go to state 31


state 18

    (39) insert_statement -> INSERT INTO . ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (40) insert_statement -> INSERT INTO . ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (43) insert_statement -> INSERT INTO . ID VALUES LPAREN expr_list RPAREN
    (44) insert_statement -> INSERT INTO . ID VALUES LPAREN expr_list RPAREN SEMI

    ID              shift and go to state 32


state 19

    (14) drop_table_statement -> DROP TABLE . ID
    (15) drop_table_statement -> DROP TABLE . ID SEMI

    ID              shift and go to state 33


state 20

    (82) id_list -> ID .

    COMMA           reduce using rule 82 (id_list -> ID .)
    FROM            reduce using rule 82 (id_list -> ID .)
    RPAREN          reduce using rule 82 (id_list -> ID .)


state 21

    (50) select_statement -> SELECT select_columns . FROM ID opt_where_clause opt_orderby_clause
    (51) select_statement -> SELECT select_columns . FROM ID opt_where_clause opt_orderby_clause SEMI

    FROM            shift and go to state 34


state 22

    (53) select_columns -> id_list .
    (83) id_list -> id_list . COMMA ID

    FROM            reduce using rule 53 (select_columns -> id_list .)
    COMMA           shift and go to state 35


state 23

    (52) select_columns -> TIMES .

    FROM            reduce using rule 52 (select_columns -> TIMES .)


state 24

    (45) update_statement -> UPDATE ID . SET asignment_list opt_where_clause
    (46) update_statement -> UPDATE ID . SET asignment_list opt_where_clause SEMI

    SET             shift and go to state 36


state 25

    (35) delete_statement -> DELETE FROM . ID opt_where_clause
    (36) delete_statement -> DELETE FROM . ID opt_where_clause SEMI

    ID              shift and go to state 37


state 26

    (16) create_table_statement -> CREATE TABLE . ID LPAREN create_table_column_list RPAREN
    (17) create_table_statement -> CREATE TABLE . ID LPAREN create_table_column_list RPAREN SEMI

    ID              shift and go to state 38


state 27

    (2) statement_list -> statement_list statement .

    INSERT          reduce using rule 2 (statement_list -> statement_list statement .)
    SELECT          reduce using rule 2 (statement_list -> statement_list statement .)
    SHOW            reduce using rule 2 (statement_list -> statement_list statement .)
    CREATE          reduce using rule 2 (statement_list -> statement_list statement .)
    DELETE          reduce using rule 2 (statement_list -> statement_list statement .)
    UPDATE          reduce using rule 2 (statement_list -> statement_list statement .)
    DROP            reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 28

    (12) show_statement -> SHOW TABLE . ID
    (13) show_statement -> SHOW TABLE . ID SEMI

    ID              shift and go to state 39


state 29

    (10) show_statement -> SHOW TABLES .
    (11) show_statement -> SHOW TABLES . SEMI

    INSERT          reduce using rule 10 (show_statement -> SHOW TABLES .)
    SELECT          reduce using rule 10 (show_statement -> SHOW TABLES .)
    SHOW            reduce using rule 10 (show_statement -> SHOW TABLES .)
    CREATE          reduce using rule 10 (show_statement -> SHOW TABLES .)
    DELETE          reduce using rule 10 (show_statement -> SHOW TABLES .)
    UPDATE          reduce using rule 10 (show_statement -> SHOW TABLES .)
    DROP            reduce using rule 10 (show_statement -> SHOW TABLES .)
    $end            reduce using rule 10 (show_statement -> SHOW TABLES .)
    SEMI            shift and go to state 40


state 30

    (37) insert_statement -> INSERT ID LPAREN . id_list RPAREN VALUES LPAREN expr_list RPAREN
    (38) insert_statement -> INSERT ID LPAREN . id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (82) id_list -> . ID
    (83) id_list -> . id_list COMMA ID

    ID              shift and go to state 20

    id_list                        shift and go to state 41

state 31

    (41) insert_statement -> INSERT ID VALUES . LPAREN expr_list RPAREN
    (42) insert_statement -> INSERT ID VALUES . LPAREN expr_list RPAREN SEMI

    LPAREN          shift and go to state 42


state 32

    (39) insert_statement -> INSERT INTO ID . LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN
    (40) insert_statement -> INSERT INTO ID . LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (43) insert_statement -> INSERT INTO ID . VALUES LPAREN expr_list RPAREN
    (44) insert_statement -> INSERT INTO ID . VALUES LPAREN expr_list RPAREN SEMI

    LPAREN          shift and go to state 43
    VALUES          shift and go to state 44


state 33

    (14) drop_table_statement -> DROP TABLE ID .
    (15) drop_table_statement -> DROP TABLE ID . SEMI

    INSERT          reduce using rule 14 (drop_table_statement -> DROP TABLE ID .)
    SELECT          reduce using rule 14 (drop_table_statement -> DROP TABLE ID .)
    SHOW            reduce using rule 14 (drop_table_statement -> DROP TABLE ID .)
    CREATE          reduce using rule 14 (drop_table_statement -> DROP TABLE ID .)
    DELETE          reduce using rule 14 (drop_table_statement -> DROP TABLE ID .)
    UPDATE          reduce using rule 14 (drop_table_statement -> DROP TABLE ID .)
    DROP            reduce using rule 14 (drop_table_statement -> DROP TABLE ID .)
    $end            reduce using rule 14 (drop_table_statement -> DROP TABLE ID .)
    SEMI            shift and go to state 45


state 34

    (50) select_statement -> SELECT select_columns FROM . ID opt_where_clause opt_orderby_clause
    (51) select_statement -> SELECT select_columns FROM . ID opt_where_clause opt_orderby_clause SEMI

    ID              shift and go to state 46


state 35

    (83) id_list -> id_list COMMA . ID

    ID              shift and go to state 47


state 36

    (45) update_statement -> UPDATE ID SET . asignment_list opt_where_clause
    (46) update_statement -> UPDATE ID SET . asignment_list opt_where_clause SEMI
    (47) asignment_list -> . asignment_spec COMMA asignment_list
    (48) asignment_list -> . asignment_spec
    (49) asignment_spec -> . ID EQ conditional_expr

    ID              shift and go to state 50

    asignment_spec                 shift and go to state 48
    asignment_list                 shift and go to state 49

state 37

    (35) delete_statement -> DELETE FROM ID . opt_where_clause
    (36) delete_statement -> DELETE FROM ID . opt_where_clause SEMI
    (54) opt_where_clause -> . WHERE conditional_expr
    (55) opt_where_clause -> .

    WHERE           shift and go to state 51
    SEMI            reduce using rule 55 (opt_where_clause -> .)
    INSERT          reduce using rule 55 (opt_where_clause -> .)
    SELECT          reduce using rule 55 (opt_where_clause -> .)
    SHOW            reduce using rule 55 (opt_where_clause -> .)
    CREATE          reduce using rule 55 (opt_where_clause -> .)
    DELETE          reduce using rule 55 (opt_where_clause -> .)
    UPDATE          reduce using rule 55 (opt_where_clause -> .)
    DROP            reduce using rule 55 (opt_where_clause -> .)
    $end            reduce using rule 55 (opt_where_clause -> .)

    opt_where_clause               shift and go to state 52

state 38

    (16) create_table_statement -> CREATE TABLE ID . LPAREN create_table_column_list RPAREN
    (17) create_table_statement -> CREATE TABLE ID . LPAREN create_table_column_list RPAREN SEMI

    LPAREN          shift and go to state 53


state 39

    (12) show_statement -> SHOW TABLE ID .
    (13) show_statement -> SHOW TABLE ID . SEMI

    INSERT          reduce using rule 12 (show_statement -> SHOW TABLE ID .)
    SELECT          reduce using rule 12 (show_statement -> SHOW TABLE ID .)
    SHOW            reduce using rule 12 (show_statement -> SHOW TABLE ID .)
    CREATE          reduce using rule 12 (show_statement -> SHOW TABLE ID .)
    DELETE          reduce using rule 12 (show_statement -> SHOW TABLE ID .)
    UPDATE          reduce using rule 12 (show_statement -> SHOW TABLE ID .)
    DROP            reduce using rule 12 (show_statement -> SHOW TABLE ID .)
    $end            reduce using rule 12 (show_statement -> SHOW TABLE ID .)
    SEMI            shift and go to state 54


state 40

    (11) show_statement -> SHOW TABLES SEMI .

    INSERT          reduce using rule 11 (show_statement -> SHOW TABLES SEMI .)
    SELECT          reduce using rule 11 (show_statement -> SHOW TABLES SEMI .)
    SHOW            reduce using rule 11 (show_statement -> SHOW TABLES SEMI .)
    CREATE          reduce using rule 11 (show_statement -> SHOW TABLES SEMI .)
    DELETE          reduce using rule 11 (show_statement -> SHOW TABLES SEMI .)
    UPDATE          reduce using rule 11 (show_statement -> SHOW TABLES SEMI .)
    DROP            reduce using rule 11 (show_statement -> SHOW TABLES SEMI .)
    $end            reduce using rule 11 (show_statement -> SHOW TABLES SEMI .)


state 41

    (37) insert_statement -> INSERT ID LPAREN id_list . RPAREN VALUES LPAREN expr_list RPAREN
    (38) insert_statement -> INSERT ID LPAREN id_list . RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (83) id_list -> id_list . COMMA ID

    RPAREN          shift and go to state 55
    COMMA           shift and go to state 35


state 42

    (41) insert_statement -> INSERT ID VALUES LPAREN . expr_list RPAREN
    (42) insert_statement -> INSERT ID VALUES LPAREN . expr_list RPAREN SEMI
    (84) expr_list -> . conditional_expr
    (85) expr_list -> . expr_list COMMA conditional_expr
    (56) conditional_expr -> . conditional_expr OR conditional_expr
    (57) conditional_expr -> . conditional_expr AND conditional_expr
    (58) conditional_expr -> . NOT conditional_expr
    (59) conditional_expr -> . LPAREN conditional_expr RPAREN
    (60) conditional_expr -> . predicate
    (61) predicate -> . comparison_predicate
    (62) comparison_predicate -> . scalar_exp EQ scalar_exp
    (63) comparison_predicate -> . scalar_exp NE scalar_exp
    (64) comparison_predicate -> . scalar_exp LT scalar_exp
    (65) comparison_predicate -> . scalar_exp LE scalar_exp
    (66) comparison_predicate -> . scalar_exp GT scalar_exp
    (67) comparison_predicate -> . scalar_exp GE scalar_exp
    (68) comparison_predicate -> . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    NOT             shift and go to state 56
    LPAREN          shift and go to state 63
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    conditional_expr               shift and go to state 62
    comparison_predicate           shift and go to state 61
    predicate                      shift and go to state 65
    expr_list                      shift and go to state 64
    scalar_exp                     shift and go to state 60
    atom                           shift and go to state 66

state 43

    (39) insert_statement -> INSERT INTO ID LPAREN . id_list RPAREN VALUES LPAREN expr_list RPAREN
    (40) insert_statement -> INSERT INTO ID LPAREN . id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (82) id_list -> . ID
    (83) id_list -> . id_list COMMA ID

    ID              shift and go to state 20

    id_list                        shift and go to state 69

state 44

    (43) insert_statement -> INSERT INTO ID VALUES . LPAREN expr_list RPAREN
    (44) insert_statement -> INSERT INTO ID VALUES . LPAREN expr_list RPAREN SEMI

    LPAREN          shift and go to state 70


state 45

    (15) drop_table_statement -> DROP TABLE ID SEMI .

    INSERT          reduce using rule 15 (drop_table_statement -> DROP TABLE ID SEMI .)
    SELECT          reduce using rule 15 (drop_table_statement -> DROP TABLE ID SEMI .)
    SHOW            reduce using rule 15 (drop_table_statement -> DROP TABLE ID SEMI .)
    CREATE          reduce using rule 15 (drop_table_statement -> DROP TABLE ID SEMI .)
    DELETE          reduce using rule 15 (drop_table_statement -> DROP TABLE ID SEMI .)
    UPDATE          reduce using rule 15 (drop_table_statement -> DROP TABLE ID SEMI .)
    DROP            reduce using rule 15 (drop_table_statement -> DROP TABLE ID SEMI .)
    $end            reduce using rule 15 (drop_table_statement -> DROP TABLE ID SEMI .)


state 46

    (50) select_statement -> SELECT select_columns FROM ID . opt_where_clause opt_orderby_clause
    (51) select_statement -> SELECT select_columns FROM ID . opt_where_clause opt_orderby_clause SEMI
    (54) opt_where_clause -> . WHERE conditional_expr
    (55) opt_where_clause -> .

    WHERE           shift and go to state 51
    ORDER           reduce using rule 55 (opt_where_clause -> .)
    SEMI            reduce using rule 55 (opt_where_clause -> .)
    INSERT          reduce using rule 55 (opt_where_clause -> .)
    SELECT          reduce using rule 55 (opt_where_clause -> .)
    SHOW            reduce using rule 55 (opt_where_clause -> .)
    CREATE          reduce using rule 55 (opt_where_clause -> .)
    DELETE          reduce using rule 55 (opt_where_clause -> .)
    UPDATE          reduce using rule 55 (opt_where_clause -> .)
    DROP            reduce using rule 55 (opt_where_clause -> .)
    $end            reduce using rule 55 (opt_where_clause -> .)

    opt_where_clause               shift and go to state 71

state 47

    (83) id_list -> id_list COMMA ID .

    COMMA           reduce using rule 83 (id_list -> id_list COMMA ID .)
    FROM            reduce using rule 83 (id_list -> id_list COMMA ID .)
    RPAREN          reduce using rule 83 (id_list -> id_list COMMA ID .)


state 48

    (47) asignment_list -> asignment_spec . COMMA asignment_list
    (48) asignment_list -> asignment_spec .

    COMMA           shift and go to state 72
    WHERE           reduce using rule 48 (asignment_list -> asignment_spec .)
    SEMI            reduce using rule 48 (asignment_list -> asignment_spec .)
    INSERT          reduce using rule 48 (asignment_list -> asignment_spec .)
    SELECT          reduce using rule 48 (asignment_list -> asignment_spec .)
    SHOW            reduce using rule 48 (asignment_list -> asignment_spec .)
    CREATE          reduce using rule 48 (asignment_list -> asignment_spec .)
    DELETE          reduce using rule 48 (asignment_list -> asignment_spec .)
    UPDATE          reduce using rule 48 (asignment_list -> asignment_spec .)
    DROP            reduce using rule 48 (asignment_list -> asignment_spec .)
    $end            reduce using rule 48 (asignment_list -> asignment_spec .)


state 49

    (45) update_statement -> UPDATE ID SET asignment_list . opt_where_clause
    (46) update_statement -> UPDATE ID SET asignment_list . opt_where_clause SEMI
    (54) opt_where_clause -> . WHERE conditional_expr
    (55) opt_where_clause -> .

    WHERE           shift and go to state 51
    SEMI            reduce using rule 55 (opt_where_clause -> .)
    INSERT          reduce using rule 55 (opt_where_clause -> .)
    SELECT          reduce using rule 55 (opt_where_clause -> .)
    SHOW            reduce using rule 55 (opt_where_clause -> .)
    CREATE          reduce using rule 55 (opt_where_clause -> .)
    DELETE          reduce using rule 55 (opt_where_clause -> .)
    UPDATE          reduce using rule 55 (opt_where_clause -> .)
    DROP            reduce using rule 55 (opt_where_clause -> .)
    $end            reduce using rule 55 (opt_where_clause -> .)

    opt_where_clause               shift and go to state 73

state 50

    (49) asignment_spec -> ID . EQ conditional_expr

    EQ              shift and go to state 74


state 51

    (54) opt_where_clause -> WHERE . conditional_expr
    (56) conditional_expr -> . conditional_expr OR conditional_expr
    (57) conditional_expr -> . conditional_expr AND conditional_expr
    (58) conditional_expr -> . NOT conditional_expr
    (59) conditional_expr -> . LPAREN conditional_expr RPAREN
    (60) conditional_expr -> . predicate
    (61) predicate -> . comparison_predicate
    (62) comparison_predicate -> . scalar_exp EQ scalar_exp
    (63) comparison_predicate -> . scalar_exp NE scalar_exp
    (64) comparison_predicate -> . scalar_exp LT scalar_exp
    (65) comparison_predicate -> . scalar_exp LE scalar_exp
    (66) comparison_predicate -> . scalar_exp GT scalar_exp
    (67) comparison_predicate -> . scalar_exp GE scalar_exp
    (68) comparison_predicate -> . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    NOT             shift and go to state 56
    LPAREN          shift and go to state 63
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    conditional_expr               shift and go to state 75
    comparison_predicate           shift and go to state 61
    scalar_exp                     shift and go to state 60
    atom                           shift and go to state 66
    predicate                      shift and go to state 65

state 52

    (35) delete_statement -> DELETE FROM ID opt_where_clause .
    (36) delete_statement -> DELETE FROM ID opt_where_clause . SEMI

    INSERT          reduce using rule 35 (delete_statement -> DELETE FROM ID opt_where_clause .)
    SELECT          reduce using rule 35 (delete_statement -> DELETE FROM ID opt_where_clause .)
    SHOW            reduce using rule 35 (delete_statement -> DELETE FROM ID opt_where_clause .)
    CREATE          reduce using rule 35 (delete_statement -> DELETE FROM ID opt_where_clause .)
    DELETE          reduce using rule 35 (delete_statement -> DELETE FROM ID opt_where_clause .)
    UPDATE          reduce using rule 35 (delete_statement -> DELETE FROM ID opt_where_clause .)
    DROP            reduce using rule 35 (delete_statement -> DELETE FROM ID opt_where_clause .)
    $end            reduce using rule 35 (delete_statement -> DELETE FROM ID opt_where_clause .)
    SEMI            shift and go to state 76


state 53

    (16) create_table_statement -> CREATE TABLE ID LPAREN . create_table_column_list RPAREN
    (17) create_table_statement -> CREATE TABLE ID LPAREN . create_table_column_list RPAREN SEMI
    (18) create_table_column_list -> . create_table_column_spec COMMA create_table_column_list
    (19) create_table_column_list -> . create_table_column_spec
    (20) create_table_column_spec -> . ID data_type qualification_list
    (21) create_table_column_spec -> . ID data_type

    ID              shift and go to state 77

    create_table_column_spec       shift and go to state 78
    create_table_column_list       shift and go to state 79

state 54

    (13) show_statement -> SHOW TABLE ID SEMI .

    INSERT          reduce using rule 13 (show_statement -> SHOW TABLE ID SEMI .)
    SELECT          reduce using rule 13 (show_statement -> SHOW TABLE ID SEMI .)
    SHOW            reduce using rule 13 (show_statement -> SHOW TABLE ID SEMI .)
    CREATE          reduce using rule 13 (show_statement -> SHOW TABLE ID SEMI .)
    DELETE          reduce using rule 13 (show_statement -> SHOW TABLE ID SEMI .)
    UPDATE          reduce using rule 13 (show_statement -> SHOW TABLE ID SEMI .)
    DROP            reduce using rule 13 (show_statement -> SHOW TABLE ID SEMI .)
    $end            reduce using rule 13 (show_statement -> SHOW TABLE ID SEMI .)


state 55

    (37) insert_statement -> INSERT ID LPAREN id_list RPAREN . VALUES LPAREN expr_list RPAREN
    (38) insert_statement -> INSERT ID LPAREN id_list RPAREN . VALUES LPAREN expr_list RPAREN SEMI

    VALUES          shift and go to state 80


state 56

    (58) conditional_expr -> NOT . conditional_expr
    (56) conditional_expr -> . conditional_expr OR conditional_expr
    (57) conditional_expr -> . conditional_expr AND conditional_expr
    (58) conditional_expr -> . NOT conditional_expr
    (59) conditional_expr -> . LPAREN conditional_expr RPAREN
    (60) conditional_expr -> . predicate
    (61) predicate -> . comparison_predicate
    (62) comparison_predicate -> . scalar_exp EQ scalar_exp
    (63) comparison_predicate -> . scalar_exp NE scalar_exp
    (64) comparison_predicate -> . scalar_exp LT scalar_exp
    (65) comparison_predicate -> . scalar_exp LE scalar_exp
    (66) comparison_predicate -> . scalar_exp GT scalar_exp
    (67) comparison_predicate -> . scalar_exp GE scalar_exp
    (68) comparison_predicate -> . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    NOT             shift and go to state 56
    LPAREN          shift and go to state 63
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    conditional_expr               shift and go to state 81
    comparison_predicate           shift and go to state 61
    scalar_exp                     shift and go to state 60
    atom                           shift and go to state 66
    predicate                      shift and go to state 65

state 57

    (75) atom -> ID .

    PLUS            reduce using rule 75 (atom -> ID .)
    MINUS           reduce using rule 75 (atom -> ID .)
    TIMES           reduce using rule 75 (atom -> ID .)
    DIVIDE          reduce using rule 75 (atom -> ID .)
    OR              reduce using rule 75 (atom -> ID .)
    AND             reduce using rule 75 (atom -> ID .)
    RPAREN          reduce using rule 75 (atom -> ID .)
    COMMA           reduce using rule 75 (atom -> ID .)
    SEMI            reduce using rule 75 (atom -> ID .)
    INSERT          reduce using rule 75 (atom -> ID .)
    SELECT          reduce using rule 75 (atom -> ID .)
    SHOW            reduce using rule 75 (atom -> ID .)
    CREATE          reduce using rule 75 (atom -> ID .)
    DELETE          reduce using rule 75 (atom -> ID .)
    UPDATE          reduce using rule 75 (atom -> ID .)
    DROP            reduce using rule 75 (atom -> ID .)
    $end            reduce using rule 75 (atom -> ID .)
    ORDER           reduce using rule 75 (atom -> ID .)
    WHERE           reduce using rule 75 (atom -> ID .)
    EQ              reduce using rule 75 (atom -> ID .)
    NE              reduce using rule 75 (atom -> ID .)
    LT              reduce using rule 75 (atom -> ID .)
    LE              reduce using rule 75 (atom -> ID .)
    GT              reduce using rule 75 (atom -> ID .)
    GE              reduce using rule 75 (atom -> ID .)


state 58

    (77) atom -> NUMBER .

    PLUS            reduce using rule 77 (atom -> NUMBER .)
    MINUS           reduce using rule 77 (atom -> NUMBER .)
    TIMES           reduce using rule 77 (atom -> NUMBER .)
    DIVIDE          reduce using rule 77 (atom -> NUMBER .)
    OR              reduce using rule 77 (atom -> NUMBER .)
    AND             reduce using rule 77 (atom -> NUMBER .)
    RPAREN          reduce using rule 77 (atom -> NUMBER .)
    COMMA           reduce using rule 77 (atom -> NUMBER .)
    SEMI            reduce using rule 77 (atom -> NUMBER .)
    INSERT          reduce using rule 77 (atom -> NUMBER .)
    SELECT          reduce using rule 77 (atom -> NUMBER .)
    SHOW            reduce using rule 77 (atom -> NUMBER .)
    CREATE          reduce using rule 77 (atom -> NUMBER .)
    DELETE          reduce using rule 77 (atom -> NUMBER .)
    UPDATE          reduce using rule 77 (atom -> NUMBER .)
    DROP            reduce using rule 77 (atom -> NUMBER .)
    $end            reduce using rule 77 (atom -> NUMBER .)
    ORDER           reduce using rule 77 (atom -> NUMBER .)
    WHERE           reduce using rule 77 (atom -> NUMBER .)
    EQ              reduce using rule 77 (atom -> NUMBER .)
    NE              reduce using rule 77 (atom -> NUMBER .)
    LT              reduce using rule 77 (atom -> NUMBER .)
    LE              reduce using rule 77 (atom -> NUMBER .)
    GT              reduce using rule 77 (atom -> NUMBER .)
    GE              reduce using rule 77 (atom -> NUMBER .)


state 59

    (76) atom -> FLOAT .

    PLUS            reduce using rule 76 (atom -> FLOAT .)
    MINUS           reduce using rule 76 (atom -> FLOAT .)
    TIMES           reduce using rule 76 (atom -> FLOAT .)
    DIVIDE          reduce using rule 76 (atom -> FLOAT .)
    OR              reduce using rule 76 (atom -> FLOAT .)
    AND             reduce using rule 76 (atom -> FLOAT .)
    RPAREN          reduce using rule 76 (atom -> FLOAT .)
    COMMA           reduce using rule 76 (atom -> FLOAT .)
    SEMI            reduce using rule 76 (atom -> FLOAT .)
    INSERT          reduce using rule 76 (atom -> FLOAT .)
    SELECT          reduce using rule 76 (atom -> FLOAT .)
    SHOW            reduce using rule 76 (atom -> FLOAT .)
    CREATE          reduce using rule 76 (atom -> FLOAT .)
    DELETE          reduce using rule 76 (atom -> FLOAT .)
    UPDATE          reduce using rule 76 (atom -> FLOAT .)
    DROP            reduce using rule 76 (atom -> FLOAT .)
    $end            reduce using rule 76 (atom -> FLOAT .)
    ORDER           reduce using rule 76 (atom -> FLOAT .)
    WHERE           reduce using rule 76 (atom -> FLOAT .)
    EQ              reduce using rule 76 (atom -> FLOAT .)
    NE              reduce using rule 76 (atom -> FLOAT .)
    LT              reduce using rule 76 (atom -> FLOAT .)
    LE              reduce using rule 76 (atom -> FLOAT .)
    GT              reduce using rule 76 (atom -> FLOAT .)
    GE              reduce using rule 76 (atom -> FLOAT .)


state 60

    (62) comparison_predicate -> scalar_exp . EQ scalar_exp
    (63) comparison_predicate -> scalar_exp . NE scalar_exp
    (64) comparison_predicate -> scalar_exp . LT scalar_exp
    (65) comparison_predicate -> scalar_exp . LE scalar_exp
    (66) comparison_predicate -> scalar_exp . GT scalar_exp
    (67) comparison_predicate -> scalar_exp . GE scalar_exp
    (68) comparison_predicate -> scalar_exp .
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    EQ              shift and go to state 88
    NE              shift and go to state 90
    LT              shift and go to state 86
    LE              shift and go to state 87
    GT              shift and go to state 82
    GE              shift and go to state 84
    OR              reduce using rule 68 (comparison_predicate -> scalar_exp .)
    AND             reduce using rule 68 (comparison_predicate -> scalar_exp .)
    RPAREN          reduce using rule 68 (comparison_predicate -> scalar_exp .)
    COMMA           reduce using rule 68 (comparison_predicate -> scalar_exp .)
    SEMI            reduce using rule 68 (comparison_predicate -> scalar_exp .)
    INSERT          reduce using rule 68 (comparison_predicate -> scalar_exp .)
    SELECT          reduce using rule 68 (comparison_predicate -> scalar_exp .)
    SHOW            reduce using rule 68 (comparison_predicate -> scalar_exp .)
    CREATE          reduce using rule 68 (comparison_predicate -> scalar_exp .)
    DELETE          reduce using rule 68 (comparison_predicate -> scalar_exp .)
    UPDATE          reduce using rule 68 (comparison_predicate -> scalar_exp .)
    DROP            reduce using rule 68 (comparison_predicate -> scalar_exp .)
    $end            reduce using rule 68 (comparison_predicate -> scalar_exp .)
    ORDER           reduce using rule 68 (comparison_predicate -> scalar_exp .)
    WHERE           reduce using rule 68 (comparison_predicate -> scalar_exp .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 85
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 89


state 61

    (61) predicate -> comparison_predicate .

    OR              reduce using rule 61 (predicate -> comparison_predicate .)
    AND             reduce using rule 61 (predicate -> comparison_predicate .)
    RPAREN          reduce using rule 61 (predicate -> comparison_predicate .)
    COMMA           reduce using rule 61 (predicate -> comparison_predicate .)
    SEMI            reduce using rule 61 (predicate -> comparison_predicate .)
    INSERT          reduce using rule 61 (predicate -> comparison_predicate .)
    SELECT          reduce using rule 61 (predicate -> comparison_predicate .)
    SHOW            reduce using rule 61 (predicate -> comparison_predicate .)
    CREATE          reduce using rule 61 (predicate -> comparison_predicate .)
    DELETE          reduce using rule 61 (predicate -> comparison_predicate .)
    UPDATE          reduce using rule 61 (predicate -> comparison_predicate .)
    DROP            reduce using rule 61 (predicate -> comparison_predicate .)
    $end            reduce using rule 61 (predicate -> comparison_predicate .)
    ORDER           reduce using rule 61 (predicate -> comparison_predicate .)
    WHERE           reduce using rule 61 (predicate -> comparison_predicate .)


state 62

    (84) expr_list -> conditional_expr .
    (56) conditional_expr -> conditional_expr . OR conditional_expr
    (57) conditional_expr -> conditional_expr . AND conditional_expr

    RPAREN          reduce using rule 84 (expr_list -> conditional_expr .)
    COMMA           reduce using rule 84 (expr_list -> conditional_expr .)
    OR              shift and go to state 93
    AND             shift and go to state 92


state 63

    (59) conditional_expr -> LPAREN . conditional_expr RPAREN
    (74) scalar_exp -> LPAREN . scalar_exp RPAREN
    (56) conditional_expr -> . conditional_expr OR conditional_expr
    (57) conditional_expr -> . conditional_expr AND conditional_expr
    (58) conditional_expr -> . NOT conditional_expr
    (59) conditional_expr -> . LPAREN conditional_expr RPAREN
    (60) conditional_expr -> . predicate
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (61) predicate -> . comparison_predicate
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL
    (62) comparison_predicate -> . scalar_exp EQ scalar_exp
    (63) comparison_predicate -> . scalar_exp NE scalar_exp
    (64) comparison_predicate -> . scalar_exp LT scalar_exp
    (65) comparison_predicate -> . scalar_exp LE scalar_exp
    (66) comparison_predicate -> . scalar_exp GT scalar_exp
    (67) comparison_predicate -> . scalar_exp GE scalar_exp
    (68) comparison_predicate -> . scalar_exp

    NOT             shift and go to state 56
    LPAREN          shift and go to state 63
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    conditional_expr               shift and go to state 95
    comparison_predicate           shift and go to state 61
    scalar_exp                     shift and go to state 94
    atom                           shift and go to state 66
    predicate                      shift and go to state 65

state 64

    (41) insert_statement -> INSERT ID VALUES LPAREN expr_list . RPAREN
    (42) insert_statement -> INSERT ID VALUES LPAREN expr_list . RPAREN SEMI
    (85) expr_list -> expr_list . COMMA conditional_expr

    RPAREN          shift and go to state 96
    COMMA           shift and go to state 97


state 65

    (60) conditional_expr -> predicate .

    OR              reduce using rule 60 (conditional_expr -> predicate .)
    AND             reduce using rule 60 (conditional_expr -> predicate .)
    RPAREN          reduce using rule 60 (conditional_expr -> predicate .)
    COMMA           reduce using rule 60 (conditional_expr -> predicate .)
    SEMI            reduce using rule 60 (conditional_expr -> predicate .)
    INSERT          reduce using rule 60 (conditional_expr -> predicate .)
    SELECT          reduce using rule 60 (conditional_expr -> predicate .)
    SHOW            reduce using rule 60 (conditional_expr -> predicate .)
    CREATE          reduce using rule 60 (conditional_expr -> predicate .)
    DELETE          reduce using rule 60 (conditional_expr -> predicate .)
    UPDATE          reduce using rule 60 (conditional_expr -> predicate .)
    DROP            reduce using rule 60 (conditional_expr -> predicate .)
    $end            reduce using rule 60 (conditional_expr -> predicate .)
    ORDER           reduce using rule 60 (conditional_expr -> predicate .)
    WHERE           reduce using rule 60 (conditional_expr -> predicate .)


state 66

    (73) scalar_exp -> atom .

    PLUS            reduce using rule 73 (scalar_exp -> atom .)
    MINUS           reduce using rule 73 (scalar_exp -> atom .)
    TIMES           reduce using rule 73 (scalar_exp -> atom .)
    DIVIDE          reduce using rule 73 (scalar_exp -> atom .)
    EQ              reduce using rule 73 (scalar_exp -> atom .)
    NE              reduce using rule 73 (scalar_exp -> atom .)
    LT              reduce using rule 73 (scalar_exp -> atom .)
    LE              reduce using rule 73 (scalar_exp -> atom .)
    GT              reduce using rule 73 (scalar_exp -> atom .)
    GE              reduce using rule 73 (scalar_exp -> atom .)
    OR              reduce using rule 73 (scalar_exp -> atom .)
    AND             reduce using rule 73 (scalar_exp -> atom .)
    RPAREN          reduce using rule 73 (scalar_exp -> atom .)
    COMMA           reduce using rule 73 (scalar_exp -> atom .)
    SEMI            reduce using rule 73 (scalar_exp -> atom .)
    INSERT          reduce using rule 73 (scalar_exp -> atom .)
    SELECT          reduce using rule 73 (scalar_exp -> atom .)
    SHOW            reduce using rule 73 (scalar_exp -> atom .)
    CREATE          reduce using rule 73 (scalar_exp -> atom .)
    DELETE          reduce using rule 73 (scalar_exp -> atom .)
    UPDATE          reduce using rule 73 (scalar_exp -> atom .)
    DROP            reduce using rule 73 (scalar_exp -> atom .)
    $end            reduce using rule 73 (scalar_exp -> atom .)
    ORDER           reduce using rule 73 (scalar_exp -> atom .)
    WHERE           reduce using rule 73 (scalar_exp -> atom .)


state 67

    (78) atom -> STRING .

    PLUS            reduce using rule 78 (atom -> STRING .)
    MINUS           reduce using rule 78 (atom -> STRING .)
    TIMES           reduce using rule 78 (atom -> STRING .)
    DIVIDE          reduce using rule 78 (atom -> STRING .)
    OR              reduce using rule 78 (atom -> STRING .)
    AND             reduce using rule 78 (atom -> STRING .)
    RPAREN          reduce using rule 78 (atom -> STRING .)
    COMMA           reduce using rule 78 (atom -> STRING .)
    SEMI            reduce using rule 78 (atom -> STRING .)
    INSERT          reduce using rule 78 (atom -> STRING .)
    SELECT          reduce using rule 78 (atom -> STRING .)
    SHOW            reduce using rule 78 (atom -> STRING .)
    CREATE          reduce using rule 78 (atom -> STRING .)
    DELETE          reduce using rule 78 (atom -> STRING .)
    UPDATE          reduce using rule 78 (atom -> STRING .)
    DROP            reduce using rule 78 (atom -> STRING .)
    $end            reduce using rule 78 (atom -> STRING .)
    ORDER           reduce using rule 78 (atom -> STRING .)
    WHERE           reduce using rule 78 (atom -> STRING .)
    EQ              reduce using rule 78 (atom -> STRING .)
    NE              reduce using rule 78 (atom -> STRING .)
    LT              reduce using rule 78 (atom -> STRING .)
    LE              reduce using rule 78 (atom -> STRING .)
    GT              reduce using rule 78 (atom -> STRING .)
    GE              reduce using rule 78 (atom -> STRING .)


state 68

    (79) atom -> NULL .

    PLUS            reduce using rule 79 (atom -> NULL .)
    MINUS           reduce using rule 79 (atom -> NULL .)
    TIMES           reduce using rule 79 (atom -> NULL .)
    DIVIDE          reduce using rule 79 (atom -> NULL .)
    OR              reduce using rule 79 (atom -> NULL .)
    AND             reduce using rule 79 (atom -> NULL .)
    RPAREN          reduce using rule 79 (atom -> NULL .)
    COMMA           reduce using rule 79 (atom -> NULL .)
    SEMI            reduce using rule 79 (atom -> NULL .)
    INSERT          reduce using rule 79 (atom -> NULL .)
    SELECT          reduce using rule 79 (atom -> NULL .)
    SHOW            reduce using rule 79 (atom -> NULL .)
    CREATE          reduce using rule 79 (atom -> NULL .)
    DELETE          reduce using rule 79 (atom -> NULL .)
    UPDATE          reduce using rule 79 (atom -> NULL .)
    DROP            reduce using rule 79 (atom -> NULL .)
    $end            reduce using rule 79 (atom -> NULL .)
    ORDER           reduce using rule 79 (atom -> NULL .)
    WHERE           reduce using rule 79 (atom -> NULL .)
    EQ              reduce using rule 79 (atom -> NULL .)
    NE              reduce using rule 79 (atom -> NULL .)
    LT              reduce using rule 79 (atom -> NULL .)
    LE              reduce using rule 79 (atom -> NULL .)
    GT              reduce using rule 79 (atom -> NULL .)
    GE              reduce using rule 79 (atom -> NULL .)


state 69

    (39) insert_statement -> INSERT INTO ID LPAREN id_list . RPAREN VALUES LPAREN expr_list RPAREN
    (40) insert_statement -> INSERT INTO ID LPAREN id_list . RPAREN VALUES LPAREN expr_list RPAREN SEMI
    (83) id_list -> id_list . COMMA ID

    RPAREN          shift and go to state 98
    COMMA           shift and go to state 35


state 70

    (43) insert_statement -> INSERT INTO ID VALUES LPAREN . expr_list RPAREN
    (44) insert_statement -> INSERT INTO ID VALUES LPAREN . expr_list RPAREN SEMI
    (84) expr_list -> . conditional_expr
    (85) expr_list -> . expr_list COMMA conditional_expr
    (56) conditional_expr -> . conditional_expr OR conditional_expr
    (57) conditional_expr -> . conditional_expr AND conditional_expr
    (58) conditional_expr -> . NOT conditional_expr
    (59) conditional_expr -> . LPAREN conditional_expr RPAREN
    (60) conditional_expr -> . predicate
    (61) predicate -> . comparison_predicate
    (62) comparison_predicate -> . scalar_exp EQ scalar_exp
    (63) comparison_predicate -> . scalar_exp NE scalar_exp
    (64) comparison_predicate -> . scalar_exp LT scalar_exp
    (65) comparison_predicate -> . scalar_exp LE scalar_exp
    (66) comparison_predicate -> . scalar_exp GT scalar_exp
    (67) comparison_predicate -> . scalar_exp GE scalar_exp
    (68) comparison_predicate -> . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    NOT             shift and go to state 56
    LPAREN          shift and go to state 63
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    conditional_expr               shift and go to state 62
    comparison_predicate           shift and go to state 61
    predicate                      shift and go to state 65
    expr_list                      shift and go to state 99
    scalar_exp                     shift and go to state 60
    atom                           shift and go to state 66

state 71

    (50) select_statement -> SELECT select_columns FROM ID opt_where_clause . opt_orderby_clause
    (51) select_statement -> SELECT select_columns FROM ID opt_where_clause . opt_orderby_clause SEMI
    (80) opt_orderby_clause -> . ORDER BY ID
    (81) opt_orderby_clause -> .

    ORDER           shift and go to state 101
    SEMI            reduce using rule 81 (opt_orderby_clause -> .)
    INSERT          reduce using rule 81 (opt_orderby_clause -> .)
    SELECT          reduce using rule 81 (opt_orderby_clause -> .)
    SHOW            reduce using rule 81 (opt_orderby_clause -> .)
    CREATE          reduce using rule 81 (opt_orderby_clause -> .)
    DELETE          reduce using rule 81 (opt_orderby_clause -> .)
    UPDATE          reduce using rule 81 (opt_orderby_clause -> .)
    DROP            reduce using rule 81 (opt_orderby_clause -> .)
    $end            reduce using rule 81 (opt_orderby_clause -> .)

    opt_orderby_clause             shift and go to state 100

state 72

    (47) asignment_list -> asignment_spec COMMA . asignment_list
    (47) asignment_list -> . asignment_spec COMMA asignment_list
    (48) asignment_list -> . asignment_spec
    (49) asignment_spec -> . ID EQ conditional_expr

    ID              shift and go to state 50

    asignment_spec                 shift and go to state 48
    asignment_list                 shift and go to state 102

state 73

    (45) update_statement -> UPDATE ID SET asignment_list opt_where_clause .
    (46) update_statement -> UPDATE ID SET asignment_list opt_where_clause . SEMI

    INSERT          reduce using rule 45 (update_statement -> UPDATE ID SET asignment_list opt_where_clause .)
    SELECT          reduce using rule 45 (update_statement -> UPDATE ID SET asignment_list opt_where_clause .)
    SHOW            reduce using rule 45 (update_statement -> UPDATE ID SET asignment_list opt_where_clause .)
    CREATE          reduce using rule 45 (update_statement -> UPDATE ID SET asignment_list opt_where_clause .)
    DELETE          reduce using rule 45 (update_statement -> UPDATE ID SET asignment_list opt_where_clause .)
    UPDATE          reduce using rule 45 (update_statement -> UPDATE ID SET asignment_list opt_where_clause .)
    DROP            reduce using rule 45 (update_statement -> UPDATE ID SET asignment_list opt_where_clause .)
    $end            reduce using rule 45 (update_statement -> UPDATE ID SET asignment_list opt_where_clause .)
    SEMI            shift and go to state 103


state 74

    (49) asignment_spec -> ID EQ . conditional_expr
    (56) conditional_expr -> . conditional_expr OR conditional_expr
    (57) conditional_expr -> . conditional_expr AND conditional_expr
    (58) conditional_expr -> . NOT conditional_expr
    (59) conditional_expr -> . LPAREN conditional_expr RPAREN
    (60) conditional_expr -> . predicate
    (61) predicate -> . comparison_predicate
    (62) comparison_predicate -> . scalar_exp EQ scalar_exp
    (63) comparison_predicate -> . scalar_exp NE scalar_exp
    (64) comparison_predicate -> . scalar_exp LT scalar_exp
    (65) comparison_predicate -> . scalar_exp LE scalar_exp
    (66) comparison_predicate -> . scalar_exp GT scalar_exp
    (67) comparison_predicate -> . scalar_exp GE scalar_exp
    (68) comparison_predicate -> . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    NOT             shift and go to state 56
    LPAREN          shift and go to state 63
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    conditional_expr               shift and go to state 104
    comparison_predicate           shift and go to state 61
    scalar_exp                     shift and go to state 60
    atom                           shift and go to state 66
    predicate                      shift and go to state 65

state 75

    (54) opt_where_clause -> WHERE conditional_expr .
    (56) conditional_expr -> conditional_expr . OR conditional_expr
    (57) conditional_expr -> conditional_expr . AND conditional_expr

    SEMI            reduce using rule 54 (opt_where_clause -> WHERE conditional_expr .)
    INSERT          reduce using rule 54 (opt_where_clause -> WHERE conditional_expr .)
    SELECT          reduce using rule 54 (opt_where_clause -> WHERE conditional_expr .)
    SHOW            reduce using rule 54 (opt_where_clause -> WHERE conditional_expr .)
    CREATE          reduce using rule 54 (opt_where_clause -> WHERE conditional_expr .)
    DELETE          reduce using rule 54 (opt_where_clause -> WHERE conditional_expr .)
    UPDATE          reduce using rule 54 (opt_where_clause -> WHERE conditional_expr .)
    DROP            reduce using rule 54 (opt_where_clause -> WHERE conditional_expr .)
    $end            reduce using rule 54 (opt_where_clause -> WHERE conditional_expr .)
    ORDER           reduce using rule 54 (opt_where_clause -> WHERE conditional_expr .)
    OR              shift and go to state 93
    AND             shift and go to state 92


state 76

    (36) delete_statement -> DELETE FROM ID opt_where_clause SEMI .

    INSERT          reduce using rule 36 (delete_statement -> DELETE FROM ID opt_where_clause SEMI .)
    SELECT          reduce using rule 36 (delete_statement -> DELETE FROM ID opt_where_clause SEMI .)
    SHOW            reduce using rule 36 (delete_statement -> DELETE FROM ID opt_where_clause SEMI .)
    CREATE          reduce using rule 36 (delete_statement -> DELETE FROM ID opt_where_clause SEMI .)
    DELETE          reduce using rule 36 (delete_statement -> DELETE FROM ID opt_where_clause SEMI .)
    UPDATE          reduce using rule 36 (delete_statement -> DELETE FROM ID opt_where_clause SEMI .)
    DROP            reduce using rule 36 (delete_statement -> DELETE FROM ID opt_where_clause SEMI .)
    $end            reduce using rule 36 (delete_statement -> DELETE FROM ID opt_where_clause SEMI .)


state 77

    (20) create_table_column_spec -> ID . data_type qualification_list
    (21) create_table_column_spec -> ID . data_type
    (22) data_type -> . INT
    (23) data_type -> . DOUBLE
    (24) data_type -> . TEXT
    (25) data_type -> . TINYINT
    (26) data_type -> . SMALLINT
    (27) data_type -> . BIGINT
    (28) data_type -> . REAL
    (29) data_type -> . DATETIME
    (30) data_type -> . DATE

    INT             shift and go to state 114
    DOUBLE          shift and go to state 111
    TEXT            shift and go to state 109
    TINYINT         shift and go to state 108
    SMALLINT        shift and go to state 110
    BIGINT          shift and go to state 105
    REAL            shift and go to state 113
    DATETIME        shift and go to state 106
    DATE            shift and go to state 112

    data_type                      shift and go to state 107

state 78

    (18) create_table_column_list -> create_table_column_spec . COMMA create_table_column_list
    (19) create_table_column_list -> create_table_column_spec .

    COMMA           shift and go to state 115
    RPAREN          reduce using rule 19 (create_table_column_list -> create_table_column_spec .)


state 79

    (16) create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list . RPAREN
    (17) create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list . RPAREN SEMI

    RPAREN          shift and go to state 116


state 80

    (37) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES . LPAREN expr_list RPAREN
    (38) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES . LPAREN expr_list RPAREN SEMI

    LPAREN          shift and go to state 117


state 81

    (58) conditional_expr -> NOT conditional_expr .
    (56) conditional_expr -> conditional_expr . OR conditional_expr
    (57) conditional_expr -> conditional_expr . AND conditional_expr

    OR              reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    AND             reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    RPAREN          reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    COMMA           reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    SEMI            reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    INSERT          reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    SELECT          reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    SHOW            reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    CREATE          reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    DELETE          reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    UPDATE          reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    DROP            reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    $end            reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    ORDER           reduce using rule 58 (conditional_expr -> NOT conditional_expr .)
    WHERE           reduce using rule 58 (conditional_expr -> NOT conditional_expr .)

  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 92 ]


state 82

    (66) comparison_predicate -> scalar_exp GT . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    LPAREN          shift and go to state 118
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    scalar_exp                     shift and go to state 119
    atom                           shift and go to state 66

state 83

    (69) scalar_exp -> scalar_exp PLUS . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    LPAREN          shift and go to state 118
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    scalar_exp                     shift and go to state 120
    atom                           shift and go to state 66

state 84

    (67) comparison_predicate -> scalar_exp GE . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    LPAREN          shift and go to state 118
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    scalar_exp                     shift and go to state 121
    atom                           shift and go to state 66

state 85

    (70) scalar_exp -> scalar_exp MINUS . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    LPAREN          shift and go to state 118
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    scalar_exp                     shift and go to state 122
    atom                           shift and go to state 66

state 86

    (64) comparison_predicate -> scalar_exp LT . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    LPAREN          shift and go to state 118
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    scalar_exp                     shift and go to state 123
    atom                           shift and go to state 66

state 87

    (65) comparison_predicate -> scalar_exp LE . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    LPAREN          shift and go to state 118
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    scalar_exp                     shift and go to state 124
    atom                           shift and go to state 66

state 88

    (62) comparison_predicate -> scalar_exp EQ . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    LPAREN          shift and go to state 118
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    scalar_exp                     shift and go to state 125
    atom                           shift and go to state 66

state 89

    (72) scalar_exp -> scalar_exp DIVIDE . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    LPAREN          shift and go to state 118
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    scalar_exp                     shift and go to state 126
    atom                           shift and go to state 66

state 90

    (63) comparison_predicate -> scalar_exp NE . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    LPAREN          shift and go to state 118
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    scalar_exp                     shift and go to state 127
    atom                           shift and go to state 66

state 91

    (71) scalar_exp -> scalar_exp TIMES . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    LPAREN          shift and go to state 118
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    scalar_exp                     shift and go to state 128
    atom                           shift and go to state 66

state 92

    (57) conditional_expr -> conditional_expr AND . conditional_expr
    (56) conditional_expr -> . conditional_expr OR conditional_expr
    (57) conditional_expr -> . conditional_expr AND conditional_expr
    (58) conditional_expr -> . NOT conditional_expr
    (59) conditional_expr -> . LPAREN conditional_expr RPAREN
    (60) conditional_expr -> . predicate
    (61) predicate -> . comparison_predicate
    (62) comparison_predicate -> . scalar_exp EQ scalar_exp
    (63) comparison_predicate -> . scalar_exp NE scalar_exp
    (64) comparison_predicate -> . scalar_exp LT scalar_exp
    (65) comparison_predicate -> . scalar_exp LE scalar_exp
    (66) comparison_predicate -> . scalar_exp GT scalar_exp
    (67) comparison_predicate -> . scalar_exp GE scalar_exp
    (68) comparison_predicate -> . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    NOT             shift and go to state 56
    LPAREN          shift and go to state 63
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    conditional_expr               shift and go to state 129
    comparison_predicate           shift and go to state 61
    scalar_exp                     shift and go to state 60
    atom                           shift and go to state 66
    predicate                      shift and go to state 65

state 93

    (56) conditional_expr -> conditional_expr OR . conditional_expr
    (56) conditional_expr -> . conditional_expr OR conditional_expr
    (57) conditional_expr -> . conditional_expr AND conditional_expr
    (58) conditional_expr -> . NOT conditional_expr
    (59) conditional_expr -> . LPAREN conditional_expr RPAREN
    (60) conditional_expr -> . predicate
    (61) predicate -> . comparison_predicate
    (62) comparison_predicate -> . scalar_exp EQ scalar_exp
    (63) comparison_predicate -> . scalar_exp NE scalar_exp
    (64) comparison_predicate -> . scalar_exp LT scalar_exp
    (65) comparison_predicate -> . scalar_exp LE scalar_exp
    (66) comparison_predicate -> . scalar_exp GT scalar_exp
    (67) comparison_predicate -> . scalar_exp GE scalar_exp
    (68) comparison_predicate -> . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    NOT             shift and go to state 56
    LPAREN          shift and go to state 63
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    conditional_expr               shift and go to state 130
    comparison_predicate           shift and go to state 61
    scalar_exp                     shift and go to state 60
    atom                           shift and go to state 66
    predicate                      shift and go to state 65

state 94

    (74) scalar_exp -> LPAREN scalar_exp . RPAREN
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp
    (62) comparison_predicate -> scalar_exp . EQ scalar_exp
    (63) comparison_predicate -> scalar_exp . NE scalar_exp
    (64) comparison_predicate -> scalar_exp . LT scalar_exp
    (65) comparison_predicate -> scalar_exp . LE scalar_exp
    (66) comparison_predicate -> scalar_exp . GT scalar_exp
    (67) comparison_predicate -> scalar_exp . GE scalar_exp
    (68) comparison_predicate -> scalar_exp .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 131
    PLUS            shift and go to state 83
    MINUS           shift and go to state 85
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 89
    EQ              shift and go to state 88
    NE              shift and go to state 90
    LT              shift and go to state 86
    LE              shift and go to state 87
    GT              shift and go to state 82
    GE              shift and go to state 84
    OR              reduce using rule 68 (comparison_predicate -> scalar_exp .)
    AND             reduce using rule 68 (comparison_predicate -> scalar_exp .)

  ! RPAREN          [ reduce using rule 68 (comparison_predicate -> scalar_exp .) ]


state 95

    (59) conditional_expr -> LPAREN conditional_expr . RPAREN
    (56) conditional_expr -> conditional_expr . OR conditional_expr
    (57) conditional_expr -> conditional_expr . AND conditional_expr

    RPAREN          shift and go to state 132
    OR              shift and go to state 93
    AND             shift and go to state 92


state 96

    (41) insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN .
    (42) insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN . SEMI

    INSERT          reduce using rule 41 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN .)
    SELECT          reduce using rule 41 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN .)
    SHOW            reduce using rule 41 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN .)
    CREATE          reduce using rule 41 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN .)
    DELETE          reduce using rule 41 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN .)
    UPDATE          reduce using rule 41 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN .)
    DROP            reduce using rule 41 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN .)
    $end            reduce using rule 41 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN .)
    SEMI            shift and go to state 133


state 97

    (85) expr_list -> expr_list COMMA . conditional_expr
    (56) conditional_expr -> . conditional_expr OR conditional_expr
    (57) conditional_expr -> . conditional_expr AND conditional_expr
    (58) conditional_expr -> . NOT conditional_expr
    (59) conditional_expr -> . LPAREN conditional_expr RPAREN
    (60) conditional_expr -> . predicate
    (61) predicate -> . comparison_predicate
    (62) comparison_predicate -> . scalar_exp EQ scalar_exp
    (63) comparison_predicate -> . scalar_exp NE scalar_exp
    (64) comparison_predicate -> . scalar_exp LT scalar_exp
    (65) comparison_predicate -> . scalar_exp LE scalar_exp
    (66) comparison_predicate -> . scalar_exp GT scalar_exp
    (67) comparison_predicate -> . scalar_exp GE scalar_exp
    (68) comparison_predicate -> . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    NOT             shift and go to state 56
    LPAREN          shift and go to state 63
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    conditional_expr               shift and go to state 134
    comparison_predicate           shift and go to state 61
    predicate                      shift and go to state 65
    scalar_exp                     shift and go to state 60
    atom                           shift and go to state 66

state 98

    (39) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN . VALUES LPAREN expr_list RPAREN
    (40) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN . VALUES LPAREN expr_list RPAREN SEMI

    VALUES          shift and go to state 135


state 99

    (43) insert_statement -> INSERT INTO ID VALUES LPAREN expr_list . RPAREN
    (44) insert_statement -> INSERT INTO ID VALUES LPAREN expr_list . RPAREN SEMI
    (85) expr_list -> expr_list . COMMA conditional_expr

    RPAREN          shift and go to state 136
    COMMA           shift and go to state 97


state 100

    (50) select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .
    (51) select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause . SEMI

    INSERT          reduce using rule 50 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .)
    SELECT          reduce using rule 50 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .)
    SHOW            reduce using rule 50 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .)
    CREATE          reduce using rule 50 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .)
    DELETE          reduce using rule 50 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .)
    UPDATE          reduce using rule 50 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .)
    DROP            reduce using rule 50 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .)
    $end            reduce using rule 50 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause .)
    SEMI            shift and go to state 137


state 101

    (80) opt_orderby_clause -> ORDER . BY ID

    BY              shift and go to state 138


state 102

    (47) asignment_list -> asignment_spec COMMA asignment_list .

    WHERE           reduce using rule 47 (asignment_list -> asignment_spec COMMA asignment_list .)
    SEMI            reduce using rule 47 (asignment_list -> asignment_spec COMMA asignment_list .)
    INSERT          reduce using rule 47 (asignment_list -> asignment_spec COMMA asignment_list .)
    SELECT          reduce using rule 47 (asignment_list -> asignment_spec COMMA asignment_list .)
    SHOW            reduce using rule 47 (asignment_list -> asignment_spec COMMA asignment_list .)
    CREATE          reduce using rule 47 (asignment_list -> asignment_spec COMMA asignment_list .)
    DELETE          reduce using rule 47 (asignment_list -> asignment_spec COMMA asignment_list .)
    UPDATE          reduce using rule 47 (asignment_list -> asignment_spec COMMA asignment_list .)
    DROP            reduce using rule 47 (asignment_list -> asignment_spec COMMA asignment_list .)
    $end            reduce using rule 47 (asignment_list -> asignment_spec COMMA asignment_list .)


state 103

    (46) update_statement -> UPDATE ID SET asignment_list opt_where_clause SEMI .

    INSERT          reduce using rule 46 (update_statement -> UPDATE ID SET asignment_list opt_where_clause SEMI .)
    SELECT          reduce using rule 46 (update_statement -> UPDATE ID SET asignment_list opt_where_clause SEMI .)
    SHOW            reduce using rule 46 (update_statement -> UPDATE ID SET asignment_list opt_where_clause SEMI .)
    CREATE          reduce using rule 46 (update_statement -> UPDATE ID SET asignment_list opt_where_clause SEMI .)
    DELETE          reduce using rule 46 (update_statement -> UPDATE ID SET asignment_list opt_where_clause SEMI .)
    UPDATE          reduce using rule 46 (update_statement -> UPDATE ID SET asignment_list opt_where_clause SEMI .)
    DROP            reduce using rule 46 (update_statement -> UPDATE ID SET asignment_list opt_where_clause SEMI .)
    $end            reduce using rule 46 (update_statement -> UPDATE ID SET asignment_list opt_where_clause SEMI .)


state 104

    (49) asignment_spec -> ID EQ conditional_expr .
    (56) conditional_expr -> conditional_expr . OR conditional_expr
    (57) conditional_expr -> conditional_expr . AND conditional_expr

    COMMA           reduce using rule 49 (asignment_spec -> ID EQ conditional_expr .)
    WHERE           reduce using rule 49 (asignment_spec -> ID EQ conditional_expr .)
    SEMI            reduce using rule 49 (asignment_spec -> ID EQ conditional_expr .)
    INSERT          reduce using rule 49 (asignment_spec -> ID EQ conditional_expr .)
    SELECT          reduce using rule 49 (asignment_spec -> ID EQ conditional_expr .)
    SHOW            reduce using rule 49 (asignment_spec -> ID EQ conditional_expr .)
    CREATE          reduce using rule 49 (asignment_spec -> ID EQ conditional_expr .)
    DELETE          reduce using rule 49 (asignment_spec -> ID EQ conditional_expr .)
    UPDATE          reduce using rule 49 (asignment_spec -> ID EQ conditional_expr .)
    DROP            reduce using rule 49 (asignment_spec -> ID EQ conditional_expr .)
    $end            reduce using rule 49 (asignment_spec -> ID EQ conditional_expr .)
    OR              shift and go to state 93
    AND             shift and go to state 92


state 105

    (27) data_type -> BIGINT .

    NOT             reduce using rule 27 (data_type -> BIGINT .)
    PRIMARY         reduce using rule 27 (data_type -> BIGINT .)
    COMMA           reduce using rule 27 (data_type -> BIGINT .)
    RPAREN          reduce using rule 27 (data_type -> BIGINT .)


state 106

    (29) data_type -> DATETIME .

    NOT             reduce using rule 29 (data_type -> DATETIME .)
    PRIMARY         reduce using rule 29 (data_type -> DATETIME .)
    COMMA           reduce using rule 29 (data_type -> DATETIME .)
    RPAREN          reduce using rule 29 (data_type -> DATETIME .)


state 107

    (20) create_table_column_spec -> ID data_type . qualification_list
    (21) create_table_column_spec -> ID data_type .
    (31) qualification_list -> . qualification_spec qualification_list
    (32) qualification_list -> . qualification_spec
    (33) qualification_spec -> . NOT NULL
    (34) qualification_spec -> . PRIMARY KEY

    COMMA           reduce using rule 21 (create_table_column_spec -> ID data_type .)
    RPAREN          reduce using rule 21 (create_table_column_spec -> ID data_type .)
    NOT             shift and go to state 139
    PRIMARY         shift and go to state 142

    qualification_spec             shift and go to state 141
    qualification_list             shift and go to state 140

state 108

    (25) data_type -> TINYINT .

    NOT             reduce using rule 25 (data_type -> TINYINT .)
    PRIMARY         reduce using rule 25 (data_type -> TINYINT .)
    COMMA           reduce using rule 25 (data_type -> TINYINT .)
    RPAREN          reduce using rule 25 (data_type -> TINYINT .)


state 109

    (24) data_type -> TEXT .

    NOT             reduce using rule 24 (data_type -> TEXT .)
    PRIMARY         reduce using rule 24 (data_type -> TEXT .)
    COMMA           reduce using rule 24 (data_type -> TEXT .)
    RPAREN          reduce using rule 24 (data_type -> TEXT .)


state 110

    (26) data_type -> SMALLINT .

    NOT             reduce using rule 26 (data_type -> SMALLINT .)
    PRIMARY         reduce using rule 26 (data_type -> SMALLINT .)
    COMMA           reduce using rule 26 (data_type -> SMALLINT .)
    RPAREN          reduce using rule 26 (data_type -> SMALLINT .)


state 111

    (23) data_type -> DOUBLE .

    NOT             reduce using rule 23 (data_type -> DOUBLE .)
    PRIMARY         reduce using rule 23 (data_type -> DOUBLE .)
    COMMA           reduce using rule 23 (data_type -> DOUBLE .)
    RPAREN          reduce using rule 23 (data_type -> DOUBLE .)


state 112

    (30) data_type -> DATE .

    NOT             reduce using rule 30 (data_type -> DATE .)
    PRIMARY         reduce using rule 30 (data_type -> DATE .)
    COMMA           reduce using rule 30 (data_type -> DATE .)
    RPAREN          reduce using rule 30 (data_type -> DATE .)


state 113

    (28) data_type -> REAL .

    NOT             reduce using rule 28 (data_type -> REAL .)
    PRIMARY         reduce using rule 28 (data_type -> REAL .)
    COMMA           reduce using rule 28 (data_type -> REAL .)
    RPAREN          reduce using rule 28 (data_type -> REAL .)


state 114

    (22) data_type -> INT .

    NOT             reduce using rule 22 (data_type -> INT .)
    PRIMARY         reduce using rule 22 (data_type -> INT .)
    COMMA           reduce using rule 22 (data_type -> INT .)
    RPAREN          reduce using rule 22 (data_type -> INT .)


state 115

    (18) create_table_column_list -> create_table_column_spec COMMA . create_table_column_list
    (18) create_table_column_list -> . create_table_column_spec COMMA create_table_column_list
    (19) create_table_column_list -> . create_table_column_spec
    (20) create_table_column_spec -> . ID data_type qualification_list
    (21) create_table_column_spec -> . ID data_type

    ID              shift and go to state 77

    create_table_column_spec       shift and go to state 78
    create_table_column_list       shift and go to state 143

state 116

    (16) create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN .
    (17) create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN . SEMI

    INSERT          reduce using rule 16 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN .)
    SELECT          reduce using rule 16 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN .)
    SHOW            reduce using rule 16 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN .)
    CREATE          reduce using rule 16 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN .)
    DELETE          reduce using rule 16 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN .)
    UPDATE          reduce using rule 16 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN .)
    DROP            reduce using rule 16 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN .)
    $end            reduce using rule 16 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN .)
    SEMI            shift and go to state 144


state 117

    (37) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN . expr_list RPAREN
    (38) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN . expr_list RPAREN SEMI
    (84) expr_list -> . conditional_expr
    (85) expr_list -> . expr_list COMMA conditional_expr
    (56) conditional_expr -> . conditional_expr OR conditional_expr
    (57) conditional_expr -> . conditional_expr AND conditional_expr
    (58) conditional_expr -> . NOT conditional_expr
    (59) conditional_expr -> . LPAREN conditional_expr RPAREN
    (60) conditional_expr -> . predicate
    (61) predicate -> . comparison_predicate
    (62) comparison_predicate -> . scalar_exp EQ scalar_exp
    (63) comparison_predicate -> . scalar_exp NE scalar_exp
    (64) comparison_predicate -> . scalar_exp LT scalar_exp
    (65) comparison_predicate -> . scalar_exp LE scalar_exp
    (66) comparison_predicate -> . scalar_exp GT scalar_exp
    (67) comparison_predicate -> . scalar_exp GE scalar_exp
    (68) comparison_predicate -> . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    NOT             shift and go to state 56
    LPAREN          shift and go to state 63
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    conditional_expr               shift and go to state 62
    comparison_predicate           shift and go to state 61
    predicate                      shift and go to state 65
    expr_list                      shift and go to state 145
    scalar_exp                     shift and go to state 60
    atom                           shift and go to state 66

state 118

    (74) scalar_exp -> LPAREN . scalar_exp RPAREN
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    LPAREN          shift and go to state 118
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    scalar_exp                     shift and go to state 146
    atom                           shift and go to state 66

state 119

    (66) comparison_predicate -> scalar_exp GT scalar_exp .
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    AND             reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    RPAREN          reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    COMMA           reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    SEMI            reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    INSERT          reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    SELECT          reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    SHOW            reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    CREATE          reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    DELETE          reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    UPDATE          reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    DROP            reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    $end            reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    ORDER           reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    WHERE           reduce using rule 66 (comparison_predicate -> scalar_exp GT scalar_exp .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 85
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 89


state 120

    (69) scalar_exp -> scalar_exp PLUS scalar_exp .
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    PLUS            reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    MINUS           reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    EQ              reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    NE              reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    LT              reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    LE              reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    GT              reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    GE              reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    OR              reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    AND             reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    RPAREN          reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    COMMA           reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    SEMI            reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    INSERT          reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    SELECT          reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    SHOW            reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    CREATE          reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    DELETE          reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    UPDATE          reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    DROP            reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    $end            reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    ORDER           reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    WHERE           reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 89

  ! TIMES           [ reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .) ]
  ! DIVIDE          [ reduce using rule 69 (scalar_exp -> scalar_exp PLUS scalar_exp .) ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 85 ]


state 121

    (67) comparison_predicate -> scalar_exp GE scalar_exp .
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    AND             reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    RPAREN          reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    COMMA           reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    SEMI            reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    INSERT          reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    SELECT          reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    SHOW            reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    CREATE          reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    DELETE          reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    UPDATE          reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    DROP            reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    $end            reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    ORDER           reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    WHERE           reduce using rule 67 (comparison_predicate -> scalar_exp GE scalar_exp .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 85
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 89


state 122

    (70) scalar_exp -> scalar_exp MINUS scalar_exp .
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    PLUS            reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    MINUS           reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    EQ              reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    NE              reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    LT              reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    LE              reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    GT              reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    GE              reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    OR              reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    AND             reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    RPAREN          reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    COMMA           reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    SEMI            reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    INSERT          reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    SELECT          reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    SHOW            reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    CREATE          reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    DELETE          reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    UPDATE          reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    DROP            reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    $end            reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    ORDER           reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    WHERE           reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 89

  ! TIMES           [ reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .) ]
  ! DIVIDE          [ reduce using rule 70 (scalar_exp -> scalar_exp MINUS scalar_exp .) ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 85 ]


state 123

    (64) comparison_predicate -> scalar_exp LT scalar_exp .
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    AND             reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    RPAREN          reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    COMMA           reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    SEMI            reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    INSERT          reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    SELECT          reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    SHOW            reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    CREATE          reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    DELETE          reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    UPDATE          reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    DROP            reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    $end            reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    ORDER           reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    WHERE           reduce using rule 64 (comparison_predicate -> scalar_exp LT scalar_exp .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 85
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 89


state 124

    (65) comparison_predicate -> scalar_exp LE scalar_exp .
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    AND             reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    RPAREN          reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    COMMA           reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    SEMI            reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    INSERT          reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    SELECT          reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    SHOW            reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    CREATE          reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    DELETE          reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    UPDATE          reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    DROP            reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    $end            reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    ORDER           reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    WHERE           reduce using rule 65 (comparison_predicate -> scalar_exp LE scalar_exp .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 85
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 89


state 125

    (62) comparison_predicate -> scalar_exp EQ scalar_exp .
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    AND             reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    RPAREN          reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    COMMA           reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    SEMI            reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    INSERT          reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    SELECT          reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    SHOW            reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    CREATE          reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    DELETE          reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    UPDATE          reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    DROP            reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    $end            reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    ORDER           reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    WHERE           reduce using rule 62 (comparison_predicate -> scalar_exp EQ scalar_exp .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 85
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 89


state 126

    (72) scalar_exp -> scalar_exp DIVIDE scalar_exp .
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    PLUS            reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    MINUS           reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    TIMES           reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    DIVIDE          reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    EQ              reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    NE              reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    LT              reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    LE              reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    GT              reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    GE              reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    OR              reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    AND             reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    RPAREN          reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    COMMA           reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    SEMI            reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    INSERT          reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    SELECT          reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    SHOW            reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    CREATE          reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    DELETE          reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    UPDATE          reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    DROP            reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    $end            reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    ORDER           reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    WHERE           reduce using rule 72 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)

  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 85 ]
  ! TIMES           [ shift and go to state 91 ]
  ! DIVIDE          [ shift and go to state 89 ]


state 127

    (63) comparison_predicate -> scalar_exp NE scalar_exp .
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    AND             reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    RPAREN          reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    COMMA           reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    SEMI            reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    INSERT          reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    SELECT          reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    SHOW            reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    CREATE          reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    DELETE          reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    UPDATE          reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    DROP            reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    $end            reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    ORDER           reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    WHERE           reduce using rule 63 (comparison_predicate -> scalar_exp NE scalar_exp .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 85
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 89


state 128

    (71) scalar_exp -> scalar_exp TIMES scalar_exp .
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    PLUS            reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    MINUS           reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    TIMES           reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    DIVIDE          reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    EQ              reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    NE              reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    LT              reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    LE              reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    GT              reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    GE              reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    OR              reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    AND             reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    RPAREN          reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    COMMA           reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    SEMI            reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    INSERT          reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    SELECT          reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    SHOW            reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    CREATE          reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    DELETE          reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    UPDATE          reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    DROP            reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    $end            reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    ORDER           reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    WHERE           reduce using rule 71 (scalar_exp -> scalar_exp TIMES scalar_exp .)

  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 85 ]
  ! TIMES           [ shift and go to state 91 ]
  ! DIVIDE          [ shift and go to state 89 ]


state 129

    (57) conditional_expr -> conditional_expr AND conditional_expr .
    (56) conditional_expr -> conditional_expr . OR conditional_expr
    (57) conditional_expr -> conditional_expr . AND conditional_expr

    OR              reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    AND             reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    RPAREN          reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    COMMA           reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    SEMI            reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    INSERT          reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    SELECT          reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    SHOW            reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    CREATE          reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    DELETE          reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    UPDATE          reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    DROP            reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    $end            reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    ORDER           reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)
    WHERE           reduce using rule 57 (conditional_expr -> conditional_expr AND conditional_expr .)

  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 92 ]


state 130

    (56) conditional_expr -> conditional_expr OR conditional_expr .
    (56) conditional_expr -> conditional_expr . OR conditional_expr
    (57) conditional_expr -> conditional_expr . AND conditional_expr

    OR              reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    RPAREN          reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    COMMA           reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    SEMI            reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    INSERT          reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    SELECT          reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    SHOW            reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    CREATE          reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    DELETE          reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    UPDATE          reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    DROP            reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    $end            reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    ORDER           reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    WHERE           reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .)
    AND             shift and go to state 92

  ! AND             [ reduce using rule 56 (conditional_expr -> conditional_expr OR conditional_expr .) ]
  ! OR              [ shift and go to state 93 ]


state 131

    (74) scalar_exp -> LPAREN scalar_exp RPAREN .

    PLUS            reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    MINUS           reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    TIMES           reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    DIVIDE          reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    EQ              reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    NE              reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    LT              reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    LE              reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    GT              reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    GE              reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    OR              reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    AND             reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    RPAREN          reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    COMMA           reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    SEMI            reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    INSERT          reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    SELECT          reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    SHOW            reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    CREATE          reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    DELETE          reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    UPDATE          reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    DROP            reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    $end            reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    ORDER           reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    WHERE           reduce using rule 74 (scalar_exp -> LPAREN scalar_exp RPAREN .)


state 132

    (59) conditional_expr -> LPAREN conditional_expr RPAREN .

    OR              reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    AND             reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    RPAREN          reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    COMMA           reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    SEMI            reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    INSERT          reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    SELECT          reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    SHOW            reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    CREATE          reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    DELETE          reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    UPDATE          reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    DROP            reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    $end            reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    ORDER           reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)
    WHERE           reduce using rule 59 (conditional_expr -> LPAREN conditional_expr RPAREN .)


state 133

    (42) insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN SEMI .

    INSERT          reduce using rule 42 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN SEMI .)
    SELECT          reduce using rule 42 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN SEMI .)
    SHOW            reduce using rule 42 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN SEMI .)
    CREATE          reduce using rule 42 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN SEMI .)
    DELETE          reduce using rule 42 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN SEMI .)
    UPDATE          reduce using rule 42 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN SEMI .)
    DROP            reduce using rule 42 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN SEMI .)
    $end            reduce using rule 42 (insert_statement -> INSERT ID VALUES LPAREN expr_list RPAREN SEMI .)


state 134

    (85) expr_list -> expr_list COMMA conditional_expr .
    (56) conditional_expr -> conditional_expr . OR conditional_expr
    (57) conditional_expr -> conditional_expr . AND conditional_expr

    RPAREN          reduce using rule 85 (expr_list -> expr_list COMMA conditional_expr .)
    COMMA           reduce using rule 85 (expr_list -> expr_list COMMA conditional_expr .)
    OR              shift and go to state 93
    AND             shift and go to state 92


state 135

    (39) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES . LPAREN expr_list RPAREN
    (40) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES . LPAREN expr_list RPAREN SEMI

    LPAREN          shift and go to state 147


state 136

    (43) insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN .
    (44) insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN . SEMI

    INSERT          reduce using rule 43 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN .)
    SELECT          reduce using rule 43 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN .)
    SHOW            reduce using rule 43 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN .)
    CREATE          reduce using rule 43 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN .)
    DELETE          reduce using rule 43 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN .)
    UPDATE          reduce using rule 43 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN .)
    DROP            reduce using rule 43 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN .)
    $end            reduce using rule 43 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN .)
    SEMI            shift and go to state 148


state 137

    (51) select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI .

    INSERT          reduce using rule 51 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI .)
    SELECT          reduce using rule 51 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI .)
    SHOW            reduce using rule 51 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI .)
    CREATE          reduce using rule 51 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI .)
    DELETE          reduce using rule 51 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI .)
    UPDATE          reduce using rule 51 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI .)
    DROP            reduce using rule 51 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI .)
    $end            reduce using rule 51 (select_statement -> SELECT select_columns FROM ID opt_where_clause opt_orderby_clause SEMI .)


state 138

    (80) opt_orderby_clause -> ORDER BY . ID

    ID              shift and go to state 149


state 139

    (33) qualification_spec -> NOT . NULL

    NULL            shift and go to state 150


state 140

    (20) create_table_column_spec -> ID data_type qualification_list .

    COMMA           reduce using rule 20 (create_table_column_spec -> ID data_type qualification_list .)
    RPAREN          reduce using rule 20 (create_table_column_spec -> ID data_type qualification_list .)


state 141

    (31) qualification_list -> qualification_spec . qualification_list
    (32) qualification_list -> qualification_spec .
    (31) qualification_list -> . qualification_spec qualification_list
    (32) qualification_list -> . qualification_spec
    (33) qualification_spec -> . NOT NULL
    (34) qualification_spec -> . PRIMARY KEY

    COMMA           reduce using rule 32 (qualification_list -> qualification_spec .)
    RPAREN          reduce using rule 32 (qualification_list -> qualification_spec .)
    NOT             shift and go to state 139
    PRIMARY         shift and go to state 142

    qualification_spec             shift and go to state 141
    qualification_list             shift and go to state 151

state 142

    (34) qualification_spec -> PRIMARY . KEY

    KEY             shift and go to state 152


state 143

    (18) create_table_column_list -> create_table_column_spec COMMA create_table_column_list .

    RPAREN          reduce using rule 18 (create_table_column_list -> create_table_column_spec COMMA create_table_column_list .)


state 144

    (17) create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI .

    INSERT          reduce using rule 17 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI .)
    SELECT          reduce using rule 17 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI .)
    SHOW            reduce using rule 17 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI .)
    CREATE          reduce using rule 17 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI .)
    DELETE          reduce using rule 17 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI .)
    UPDATE          reduce using rule 17 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI .)
    DROP            reduce using rule 17 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI .)
    $end            reduce using rule 17 (create_table_statement -> CREATE TABLE ID LPAREN create_table_column_list RPAREN SEMI .)


state 145

    (37) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list . RPAREN
    (38) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list . RPAREN SEMI
    (85) expr_list -> expr_list . COMMA conditional_expr

    RPAREN          shift and go to state 153
    COMMA           shift and go to state 97


state 146

    (74) scalar_exp -> LPAREN scalar_exp . RPAREN
    (69) scalar_exp -> scalar_exp . PLUS scalar_exp
    (70) scalar_exp -> scalar_exp . MINUS scalar_exp
    (71) scalar_exp -> scalar_exp . TIMES scalar_exp
    (72) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    RPAREN          shift and go to state 131
    PLUS            shift and go to state 83
    MINUS           shift and go to state 85
    TIMES           shift and go to state 91
    DIVIDE          shift and go to state 89


state 147

    (39) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN . expr_list RPAREN
    (40) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN . expr_list RPAREN SEMI
    (84) expr_list -> . conditional_expr
    (85) expr_list -> . expr_list COMMA conditional_expr
    (56) conditional_expr -> . conditional_expr OR conditional_expr
    (57) conditional_expr -> . conditional_expr AND conditional_expr
    (58) conditional_expr -> . NOT conditional_expr
    (59) conditional_expr -> . LPAREN conditional_expr RPAREN
    (60) conditional_expr -> . predicate
    (61) predicate -> . comparison_predicate
    (62) comparison_predicate -> . scalar_exp EQ scalar_exp
    (63) comparison_predicate -> . scalar_exp NE scalar_exp
    (64) comparison_predicate -> . scalar_exp LT scalar_exp
    (65) comparison_predicate -> . scalar_exp LE scalar_exp
    (66) comparison_predicate -> . scalar_exp GT scalar_exp
    (67) comparison_predicate -> . scalar_exp GE scalar_exp
    (68) comparison_predicate -> . scalar_exp
    (69) scalar_exp -> . scalar_exp PLUS scalar_exp
    (70) scalar_exp -> . scalar_exp MINUS scalar_exp
    (71) scalar_exp -> . scalar_exp TIMES scalar_exp
    (72) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (73) scalar_exp -> . atom
    (74) scalar_exp -> . LPAREN scalar_exp RPAREN
    (75) atom -> . ID
    (76) atom -> . FLOAT
    (77) atom -> . NUMBER
    (78) atom -> . STRING
    (79) atom -> . NULL

    NOT             shift and go to state 56
    LPAREN          shift and go to state 63
    ID              shift and go to state 57
    FLOAT           shift and go to state 59
    NUMBER          shift and go to state 58
    STRING          shift and go to state 67
    NULL            shift and go to state 68

    conditional_expr               shift and go to state 62
    comparison_predicate           shift and go to state 61
    predicate                      shift and go to state 65
    expr_list                      shift and go to state 154
    scalar_exp                     shift and go to state 60
    atom                           shift and go to state 66

state 148

    (44) insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI .

    INSERT          reduce using rule 44 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI .)
    SELECT          reduce using rule 44 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI .)
    SHOW            reduce using rule 44 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI .)
    CREATE          reduce using rule 44 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI .)
    DELETE          reduce using rule 44 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI .)
    UPDATE          reduce using rule 44 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI .)
    DROP            reduce using rule 44 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI .)
    $end            reduce using rule 44 (insert_statement -> INSERT INTO ID VALUES LPAREN expr_list RPAREN SEMI .)


state 149

    (80) opt_orderby_clause -> ORDER BY ID .

    SEMI            reduce using rule 80 (opt_orderby_clause -> ORDER BY ID .)
    INSERT          reduce using rule 80 (opt_orderby_clause -> ORDER BY ID .)
    SELECT          reduce using rule 80 (opt_orderby_clause -> ORDER BY ID .)
    SHOW            reduce using rule 80 (opt_orderby_clause -> ORDER BY ID .)
    CREATE          reduce using rule 80 (opt_orderby_clause -> ORDER BY ID .)
    DELETE          reduce using rule 80 (opt_orderby_clause -> ORDER BY ID .)
    UPDATE          reduce using rule 80 (opt_orderby_clause -> ORDER BY ID .)
    DROP            reduce using rule 80 (opt_orderby_clause -> ORDER BY ID .)
    $end            reduce using rule 80 (opt_orderby_clause -> ORDER BY ID .)


state 150

    (33) qualification_spec -> NOT NULL .

    NOT             reduce using rule 33 (qualification_spec -> NOT NULL .)
    PRIMARY         reduce using rule 33 (qualification_spec -> NOT NULL .)
    COMMA           reduce using rule 33 (qualification_spec -> NOT NULL .)
    RPAREN          reduce using rule 33 (qualification_spec -> NOT NULL .)


state 151

    (31) qualification_list -> qualification_spec qualification_list .

    COMMA           reduce using rule 31 (qualification_list -> qualification_spec qualification_list .)
    RPAREN          reduce using rule 31 (qualification_list -> qualification_spec qualification_list .)


state 152

    (34) qualification_spec -> PRIMARY KEY .

    NOT             reduce using rule 34 (qualification_spec -> PRIMARY KEY .)
    PRIMARY         reduce using rule 34 (qualification_spec -> PRIMARY KEY .)
    COMMA           reduce using rule 34 (qualification_spec -> PRIMARY KEY .)
    RPAREN          reduce using rule 34 (qualification_spec -> PRIMARY KEY .)


state 153

    (37) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .
    (38) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN . SEMI

    INSERT          reduce using rule 37 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    SELECT          reduce using rule 37 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    SHOW            reduce using rule 37 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    CREATE          reduce using rule 37 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    DELETE          reduce using rule 37 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    UPDATE          reduce using rule 37 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    DROP            reduce using rule 37 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    $end            reduce using rule 37 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    SEMI            shift and go to state 155


state 154

    (39) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list . RPAREN
    (40) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list . RPAREN SEMI
    (85) expr_list -> expr_list . COMMA conditional_expr

    RPAREN          shift and go to state 156
    COMMA           shift and go to state 97


state 155

    (38) insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .

    INSERT          reduce using rule 38 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    SELECT          reduce using rule 38 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    SHOW            reduce using rule 38 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    CREATE          reduce using rule 38 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    DELETE          reduce using rule 38 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    UPDATE          reduce using rule 38 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    DROP            reduce using rule 38 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    $end            reduce using rule 38 (insert_statement -> INSERT ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)


state 156

    (39) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .
    (40) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN . SEMI

    INSERT          reduce using rule 39 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    SELECT          reduce using rule 39 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    SHOW            reduce using rule 39 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    CREATE          reduce using rule 39 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    DELETE          reduce using rule 39 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    UPDATE          reduce using rule 39 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    DROP            reduce using rule 39 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    $end            reduce using rule 39 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN .)
    SEMI            shift and go to state 157


state 157

    (40) insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .

    INSERT          reduce using rule 40 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    SELECT          reduce using rule 40 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    SHOW            reduce using rule 40 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    CREATE          reduce using rule 40 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    DELETE          reduce using rule 40 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    UPDATE          reduce using rule 40 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    DROP            reduce using rule 40 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)
    $end            reduce using rule 40 (insert_statement -> INSERT INTO ID LPAREN id_list RPAREN VALUES LPAREN expr_list RPAREN SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 94 resolved as shift
